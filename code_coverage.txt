QuestaSim-64 vcover 2021.1 Coverage Utility 2021.01 Jan 19 2021
Start time: 14:41:45 on Sep 16,2023
vcover report matrix_inv.ucdb -details -annotate -all 
Coverage Report by instance with details

=================================================================================
=== Instance: /matrix_inv_tb/DUT/q1
=== Design Unit: work.q_matrix
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        15        14         1    93.33%

================================Branch Details================================

Branch Coverage for instance /matrix_inv_tb/DUT/q1

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File q_matrix.sv
------------------------------------IF Branch------------------------------------
    14                                        26     Count coming in to IF
    14              1                          2         if(!rst_n)begin
    30              1                          3         else if(load)begin
    39              1                          5         else if(start) begin
    98              1                         10         else if(read)begin
                                               6     All False Count
Branch totals: 5 hits of 5 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    40                                         5     Count coming in to CASE
    41              1                          1             2'b00:begin
    57              1                          1             2'b01:begin
    70              1                          1             2'b10:begin
    80              1                          2             2'b11:begin
                                         ***0***     All False Count
Branch totals: 4 hits of 5 branches = 80.00%

------------------------------------IF Branch------------------------------------
    100                                       10     Count coming in to IF
    100             1                          9             if(!finish)begin
                                               1     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    102                                        9     Count coming in to IF
    102             1                          1                 if((count_i==2'b10)&&(count_j==2'b10))
    104             1                          2                 else if(count_j==2'b10)begin
    108             1                          6                 else
Branch totals: 3 hits of 3 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       3         3         0   100.00%

================================Condition Details================================

Condition Coverage for instance /matrix_inv_tb/DUT/q1 --

  File q_matrix.sv
----------------Focused Condition View-------------------
Line       102 Item    1  ((count_i == 2) && (count_j == 2))
Condition totals: 2 of 2 input terms covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  (count_i == 2)         Y
  (count_j == 2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count_i == 2)_0      -                             
  Row   2:          1  (count_i == 2)_1      (count_j == 2)                
  Row   3:          1  (count_j == 2)_0      (count_i == 2)                
  Row   4:          1  (count_j == 2)_1      (count_i == 2)                

----------------Focused Condition View-------------------
Line       104 Item    1  (count_j == 2)
Condition totals: 1 of 1 input term covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  (count_j == 2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count_j == 2)_0      -                             
  Row   2:          1  (count_j == 2)_1      -                             


FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       4         4         0   100.00%
    FSM Transitions                  6         4         2    66.66%

================================FSM Details================================

FSM Coverage for instance /matrix_inv_tb/DUT/q1 --

FSM_ID: count
    Current State Object : count
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  41                 st0                   0
  57                 st1                   1
  70                 st2                   2
  99                 st3                   3
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                     st0                  12          
                     st1                   1          
                     st2                   1          
                     st3                   1          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
  55                   0                   1          st0 -> st1                    
  68                   1                   1          st1 -> st2                    
  78                   3                   1          st2 -> st3                    
  99                   5                   1          st3 -> st0                    
    Uncovered Transitions :
    -----------------------
Line            Trans_ID          Transition          
----            --------          ----------          
  99                   2          st1 -> st0          
  99                   4          st2 -> st0          


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   4         4         0   100.00%
        FSM Transitions              6         4         2    66.66%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      63        63         0   100.00%

================================Statement Details================================

Statement Coverage for instance /matrix_inv_tb/DUT/q1 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File q_matrix.sv
    1                                                module q_matrix #(parameter STG  = 12,parameter SIZE = 16,parameter INT  = 4,parameter FRAC = 12) (
    2                                                    input clk,rst_n,start,load,read,
    3                                                    input [1:0] addr,
    4                                                    input signed [SIZE-1 : 0] sin,cos,
    5                                                    output reg done,finish,
    6                                                    output reg signed [SIZE-1 : 0] Q
    7                                                );
    8                                                bit signed [SIZE-1 : 0] mat [0:2] [0:2];
    9                                                bit signed [SIZE-1 : 0] Sin [0:2];
    10                                               bit signed [SIZE-1 : 0] Cos [0:2];
    11                                               bit [1:0] count,count_i,count_j,i,j;
    12                                               logic signed [(2*SIZE)-1:0] A,B,C,D,E,F,G,H,J,K,L,M,N,O,P,U,R,S;
    13              1                         26     always@(posedge clk , negedge rst_n)begin
    14                                                   if(!rst_n)begin
    15              1                          2             for(i=0;i<3;i++)begin
    15              2                          6     
    16              1                          6                 for(j=0;j<3;j++)
    16              2                         18     
    17              1                         18                     mat[i][j]<=0;
    18                                                       end
    19              1                          8             foreach(Cos[i])begin
    20              1                          6                 Cos[i]<=0;
    21              1                          6                 Sin[i]<=0;
    22                                                       end
    23              1                          2             Q<=0;
    24              1                          2             count_i<=0;
    25              1                          2             count_j<=0;
    26              1                          2             done<=0;
    27              1                          2             finish<=0;
    28              1                          2             count<=0;
    29                                                   end
    30                                                   else if(load)begin
    31              1                          3             Cos[addr] <= cos;
    32              1                          3             Sin[addr] <= sin;
    33              1                          3             done<=0;
    34              1                          3             count_i<=0;
    35              1                          3             count_j<=0;
    36              1                          3             finish<=0;
    37              1                          3             Q<=0;
    38                                                   end
    39                                                   else if(start) begin
    40                                                       case(count)
    41                                                       2'b00:begin
    42              1                          1                 A<=($signed(Cos[0]) * $signed(Cos[1]))>>>12;///////1,1
    43              1                          1                 B<=($signed(Cos[2]) * $signed(Sin[0]))>>>12;
    44              1                          1                 C<=($signed(Cos[0]) * $signed(Sin[1]))>>>12;
    45              1                          1                 F<=($signed(Sin[0]) * $signed(Sin[2]))>>>12;
    46              1                          1                 J<= -(($signed(Cos[1]) * $signed(Sin[0]))>>>12);//1,2
    47              1                          1                 K<=($signed(Cos[0]) * $signed(Cos[2]))>>>12;
    48              1                          1                 M<=($signed(Cos[0]) * $signed(Sin[2]))>>>12;
    49              1                          1                 N<=($signed(Cos[2]) * $signed(Sin[0]))>>>12;
    50              1                          1                 R<= -(($signed(Cos[1]) * $signed(Sin[2]))>>>12);//2,3
    51              1                          1                 S<=($signed(Cos[1]) * $signed(Cos[2]))>>>12;//3,3
    52                                               
    53                                               
    54                                               /////////////////////////////////////////////////////////////////////////////////
    55              1                          1                 count<= count + 1;
    56                                                       end
    57                                                       2'b01:begin
    58              1                          1                 D<= ($signed(C[15:0]) * $signed(Sin[2]) )>>>12;
    59              1                          1                 G<= ($signed(C[15:0]) * $signed(Cos[2]) )>>>12;
    60              1                          1                 L<= ($signed(F[15:0]) * $signed(Sin[1]) )>>>12;
    61              1                          1                 P<= ($signed(N[15:0]) * $signed(Sin[1]) )>>>12;
    62                                               
    63                                               
    64                                               
    65                                               
    66                                               
    67                                                           //////////////////////////////////////////
    68              1                          1                 count <= count + 1;
    69                                                       end
    70                                                       2'b10:begin
    71              1                          1                 E<= B[15:0] - D[15:0];//2,1
    72              1                          1                 H<= F[15:0] + G[15:0];//3,1
    73              1                          1                 O<= K[15:0] + L[15:0];//2,2
    74              1                          1                 U<= M[15:0] - P[15:0];//3,2
    75                                                           ///-Sin[1]; 1,3
    76                                               
    77                                                           ///////////////////////////////////////////////////////
    78              1                          1                 count <= count +1; 
    79                                                       end
    80                                                       2'b11:begin
    81              1                          2                 mat[0][0]<= A[15:0];
    82              1                          2                 mat[0][1]<= J[15:0];
    83              1                          2                 mat[0][2]<= -Sin[1];
    84              1                          2                 mat[1][0]<= E[15:0];
    85              1                          2                 mat[1][1]<= O[15:0];
    86              1                          2                 mat[1][2]<= R[15:0];
    87              1                          2                 mat[2][0]<= H[15:0];
    88              1                          2                 mat[2][1]<= U[15:0];
    89              1                          2                 mat[2][2]<= S[15:0];
    90              1                          2                 done<=1;
    91              1                          2                 count_i<=0;
    92              1                          2                 count_j<=0;
    93              1                          2                 finish<=0;
    94              1                          2                 Q<=0;
    95                                                       end
    96                                                       endcase 
    97                                                   end
    98                                                   else if(read)begin
    99              1                         10             count<=0;
    100                                                      if(!finish)begin
    101             1                          9                 Q<=mat[count_i][count_j];
    102                                                          if((count_i==2'b10)&&(count_j==2'b10))
    103             1                          1                     finish<=1;
    104                                                          else if(count_j==2'b10)begin
    105             1                          2                     count_i<=count_i+1;
    106             1                          2                     count_j<='0;
    107                                                          end
    108                                                          else
    109             1                          6                     count_j<=count_j+1;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                       1286       106      1180     8.24%

================================Toggle Details================================

Toggle Coverage for instance /matrix_inv_tb/DUT/q1 --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                           A[31-0]           0           0                                0.00 
                                           B[31-0]           0           0                                0.00 
                                           C[31-0]           0           0                                0.00 
                                           D[31-0]           0           0                                0.00 
                                           E[31-0]           0           0                                0.00 
                                           F[31-0]           0           0                                0.00 
                                           G[31-0]           0           0                                0.00 
                                           H[31-0]           0           0                                0.00 
                                           J[31-0]           0           0                                0.00 
                                           K[31-0]           0           0                                0.00 
                                           L[31-0]           0           0                                0.00 
                                           M[31-0]           0           0                                0.00 
                                           N[31-0]           0           0                                0.00 
                                           O[31-0]           0           0                                0.00 
                                           P[31-0]           0           0                                0.00 
                                           Q[15-0]           1           1                              100.00 
                                           R[31-0]           0           0                                0.00 
                                           S[31-0]           0           0                                0.00 
                                           U[31-0]           0           0                                0.00 
                                           addr[0]           1           1                              100.00 
                                           addr[1]           0           1                               50.00 
                                               clk           1           1                              100.00 
                                          cos[0-4]           1           1                              100.00 
                                            cos[5]           0           1                               50.00 
                                          cos[6-7]           1           1                              100.00 
                                          cos[8-9]           0           1                               50.00 
                                           cos[10]           1           1                              100.00 
                                           cos[11]           0           1                               50.00 
                                        cos[12-15]           0           0                                0.00 
                                        count[1-0]           1           1                              100.00 
                                        count_i[1]           0           1                               50.00 
                                        count_i[0]           1           1                              100.00 
                                      count_j[1-0]           1           1                              100.00 
                                              done           0           1                               50.00 
                                            finish           0           1                               50.00 
                                            i[1-0]           0           1                               50.00 
                                            j[1-0]           0           1                               50.00 
                                              load           1           1                              100.00 
                                              read           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                            sin[0]           1           1                              100.00 
                                          sin[1-2]           0           1                               50.00 
                                          sin[3-4]           1           1                              100.00 
                                            sin[5]           0           0                                0.00 
                                          sin[6-7]           1           1                              100.00 
                                            sin[8]           0           1                               50.00 
                                            sin[9]           0           0                                0.00 
                                           sin[10]           0           1                               50.00 
                                        sin[11-15]           1           1                              100.00 
                                             start           1           1                              100.00 

Total Node Count     =        643 
Toggled Node Count   =         45 
Untoggled Node Count =        598 

Toggle Coverage      =       8.24% (106 of 1286 bins)

=================================================================================
=== Instance: /matrix_inv_tb/DUT/r1
=== Design Unit: work.rot_cordic
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        13        13         0   100.00%

================================Branch Details================================

Branch Coverage for instance /matrix_inv_tb/DUT/r1

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File rot_cordic.sv
------------------------------------IF Branch------------------------------------
    39                                        50     Count coming in to IF
    39              1                          2       if(!rst_n)begin
    47              1                          3        else if(start) begin
    54              1                         45        else begin
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    56                                        45     Count coming in to IF
    56              1                         36         if(itr_count != STG) begin
                                               9     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    57                                        36     Count coming in to IF
    57              1                         17           X_reg <= theta_sign ? X_reg + Y_shift : X_reg - Y_shift;
    57              2                         19           X_reg <= theta_sign ? X_reg + Y_shift : X_reg - Y_shift;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    58                                        36     Count coming in to IF
    58              1                         17           Y_reg <= theta_sign ? Y_reg - X_shift : Y_reg + X_shift;
    58              2                         19           Y_reg <= theta_sign ? Y_reg - X_shift : Y_reg + X_shift;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    59                                        36     Count coming in to IF
    59              1                         17           theta <= theta_sign ? theta + atan_table[itr_count] : theta - atan_table[itr_count];  
    59              2                         19           theta <= theta_sign ? theta + atan_table[itr_count] : theta - atan_table[itr_count];  
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    60                                        36     Count coming in to IF
    60              1                          3                 if(itr_count == STG-1) begin
    64              1                         33                 else begin
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         2         0   100.00%

================================Condition Details================================

Condition Coverage for instance /matrix_inv_tb/DUT/r1 --

  File rot_cordic.sv
----------------Focused Condition View-------------------
Line       56 Item    1  (itr_count != 12)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (itr_count != 12)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (itr_count != 12)_0   -                             
  Row   2:          1  (itr_count != 12)_1   -                             

----------------Focused Condition View-------------------
Line       60 Item    1  (itr_count == (12 - 1))
Condition totals: 1 of 1 input term covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  (itr_count == (12 - 1))         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  (itr_count == (12 - 1))_0  -                             
  Row   2:          1  (itr_count == (12 - 1))_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      27        27         0   100.00%

================================Statement Details================================

Statement Coverage for instance /matrix_inv_tb/DUT/r1 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File rot_cordic.sv
    1                                                module rot_cordic #(parameter STG  = 12,parameter SIZE = 16,parameter INT  = 4,parameter FRAC = 12 ,parameter factor =16'h09b8) 
    2                                                 (
    3                                                    input                                clk,
    4                                                    input                              rst_n,
    5                                                    input                              start,  
    6                                                    input     signed [SIZE-1:0]          Xin, 
    7                                                    input     signed [SIZE-1:0]          Yin,
    8                                                    input     signed [SIZE-1:0]        angle,
    9                                                    output    logic  signed [SIZE-1:0]         Xout,
    10                                                   output    logic  signed [SIZE-1:0]         Yout,
    11                                                   output    logic                       done
    12                                               );
    13                                               ////***********************************************REGISTERS*********************************************************////
    14                                               logic   signed     [SIZE-1:0]    X_reg;
    15                                               logic   signed     [SIZE-1:0]    Y_reg;
    16                                               logic   signed     [SIZE-1:0]    theta;
    17                                               logic   signed     [SIZE-1:0]  X_shift;
    18                                               //logic   signed     [SIZE-1:0]  factor;
    19                                               logic   signed     [SIZE-1:0]  Y_shift;
    20                                               logic                       theta_sign;
    21                                               logic              [3:0]     itr_count;
    22                                               logic   signed [(SIZE*2)-1 : 0] X_mul ,Y_mul;
    23                                               ////***********************************************arctan table*********************************************************////
    24                                               logic signed [SIZE-1:0] atan_table[0:14];
    25                                               assign atan_table[00] = 16'h0c90; // 45.000 Radian -> atan(2^0)
    26                                               assign atan_table[01] = 16'h076b; // 26.565 Radian -> atan(2^-1)
    27                                               assign atan_table[02] = 16'h03EB;
    28                                               assign atan_table[03] = 16'h01fd; // 14.036 Radian -> atan(2^-2)
    29                                               assign atan_table[04] = 16'h00ff; // atan(2^-n)
    30                                               assign atan_table[05] = 16'h007f;
    31                                               assign atan_table[06] = 16'h003f;
    32                                               assign atan_table[07] = 16'h001f;
    33                                               assign atan_table[08] = 16'h000f;
    34                                               assign atan_table[09] = 16'h0007;
    35                                               assign atan_table[10] = 16'h0003;
    36                                               assign atan_table[11] = 16'h0001;
    37                                               ////****************************************************proc-block************************************************************////
    38              1                         50     always @(posedge clk , negedge rst_n) begin
    39                                                 if(!rst_n)begin
    40              1                          2         X_reg     <=0;
    41              1                          2         Y_reg     <=0;
    42              1                          2         theta     <=0;
    43              1                          2         done      <=0;
    44              1                          2         itr_count <= STG;
    45                                                 //  factor<=16'h09b8;
    46                                                  end 
    47                                                  else if(start) begin
    48              1                          3         X_reg       <=  Xin;
    49              1                          3         Y_reg       <=  Yin;
    50              1                          3         theta       <=angle;
    51              1                          3         itr_count   <=    0;
    52              1                          3         done        <=    0;
    53                                                  end 
    54                                                  else begin
    55              1                         45         done <=0;
    56                                                   if(itr_count != STG) begin
    57              1                         36           X_reg <= theta_sign ? X_reg + Y_shift : X_reg - Y_shift;
    58              1                         36           Y_reg <= theta_sign ? Y_reg - X_shift : Y_reg + X_shift;
    59              1                         36           theta <= theta_sign ? theta + atan_table[itr_count] : theta - atan_table[itr_count];  
    60                                                           if(itr_count == STG-1) begin
    61              1                          3                     done<=1;
    62              1                          3                     itr_count <= STG;
    63                                                           end
    64                                                           else begin
    65              1                         33                     itr_count <= itr_count +1;
    66              1                         33                     done <= 0;
    67                                                           end
    68                                                   end
    69                                                 end
    70                                               end
    71                                               /////*************************************************************assigning****************************************************/////
    72              1                         41     always_comb begin 
    73              1                         41       X_shift    = X_reg>>>itr_count;                 //signed shift right
    74              1                         41       Y_shift    = Y_reg>>>itr_count;
    75              1                         41       theta_sign =theta[SIZE-1];                     //theta_sign=1 if z[i]<0
    76              1                         41       X_mul =    ($signed(X_reg) * $signed(factor))>>>12;
    77              1                         41       Y_mul =    ($signed(Y_reg) * $signed(factor))>>>12;
    78              1                         41       Xout       =  X_mul;
    79              1                         41       Yout       =  Y_mul;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        466       416        50    89.27%

================================Toggle Details================================

Toggle Coverage for instance /matrix_inv_tb/DUT/r1 --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                       X_mul[31-0]           1           1                              100.00 
                                       X_reg[15-0]           1           1                              100.00 
                                     X_shift[15-0]           1           1                              100.00 
                                            Xin[0]           1           1                              100.00 
                                          Xin[1-4]           0           1                               50.00 
                                            Xin[5]           0           0                                0.00 
                                            Xin[6]           0           1                               50.00 
                                            Xin[7]           1           1                              100.00 
                                            Xin[8]           0           1                               50.00 
                                            Xin[9]           0           0                                0.00 
                                           Xin[10]           0           1                               50.00 
                                        Xin[11-12]           1           1                              100.00 
                                        Xin[13-15]           0           0                                0.00 
                                        Xout[15-0]           1           1                              100.00 
                                       Y_mul[31-0]           1           1                              100.00 
                                       Y_reg[15-0]           1           1                              100.00 
                                     Y_shift[15-0]           1           1                              100.00 
                                            Yin[0]           0           1                               50.00 
                                          Yin[1-2]           0           0                                0.00 
                                            Yin[3]           0           1                               50.00 
                                            Yin[4]           0           0                                0.00 
                                            Yin[5]           0           1                               50.00 
                                          Yin[6-7]           0           0                                0.00 
                                         Yin[8-10]           0           1                               50.00 
                                           Yin[11]           0           0                                0.00 
                                        Yin[12-13]           1           1                              100.00 
                                        Yin[14-15]           0           0                                0.00 
                                        Yout[15-0]           1           1                              100.00 
                                        angle[0-4]           0           1                               50.00 
                                          angle[5]           0           0                                0.00 
                                        angle[6-7]           1           1                              100.00 
                                          angle[8]           0           1                               50.00 
                                          angle[9]           0           0                                0.00 
                                         angle[10]           0           1                               50.00 
                                      angle[11-15]           1           1                              100.00 
                                               clk           1           1                              100.00 
                                              done           1           1                              100.00 
                                    itr_count[3-0]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                             start           1           1                              100.00 
                                       theta[15-0]           1           1                              100.00 
                                        theta_sign           1           1                              100.00 

Total Node Count     =        233 
Toggled Node Count   =        198 
Untoggled Node Count =         35 

Toggle Coverage      =      89.27% (416 of 466 bins)

=================================================================================
=== Instance: /matrix_inv_tb/DUT/r2
=== Design Unit: work.rot_cordic
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        13        13         0   100.00%

================================Branch Details================================

Branch Coverage for instance /matrix_inv_tb/DUT/r2

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File rot_cordic.sv
------------------------------------IF Branch------------------------------------
    39                                        50     Count coming in to IF
    39              1                          2       if(!rst_n)begin
    47              1                          3        else if(start) begin
    54              1                         45        else begin
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    56                                        45     Count coming in to IF
    56              1                         36         if(itr_count != STG) begin
                                               9     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    57                                        36     Count coming in to IF
    57              1                         17           X_reg <= theta_sign ? X_reg + Y_shift : X_reg - Y_shift;
    57              2                         19           X_reg <= theta_sign ? X_reg + Y_shift : X_reg - Y_shift;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    58                                        36     Count coming in to IF
    58              1                         17           Y_reg <= theta_sign ? Y_reg - X_shift : Y_reg + X_shift;
    58              2                         19           Y_reg <= theta_sign ? Y_reg - X_shift : Y_reg + X_shift;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    59                                        36     Count coming in to IF
    59              1                         17           theta <= theta_sign ? theta + atan_table[itr_count] : theta - atan_table[itr_count];  
    59              2                         19           theta <= theta_sign ? theta + atan_table[itr_count] : theta - atan_table[itr_count];  
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    60                                        36     Count coming in to IF
    60              1                          3                 if(itr_count == STG-1) begin
    64              1                         33                 else begin
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         2         0   100.00%

================================Condition Details================================

Condition Coverage for instance /matrix_inv_tb/DUT/r2 --

  File rot_cordic.sv
----------------Focused Condition View-------------------
Line       56 Item    1  (itr_count != 12)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (itr_count != 12)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (itr_count != 12)_0   -                             
  Row   2:          1  (itr_count != 12)_1   -                             

----------------Focused Condition View-------------------
Line       60 Item    1  (itr_count == (12 - 1))
Condition totals: 1 of 1 input term covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  (itr_count == (12 - 1))         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  (itr_count == (12 - 1))_0  -                             
  Row   2:          1  (itr_count == (12 - 1))_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      27        27         0   100.00%

================================Statement Details================================

Statement Coverage for instance /matrix_inv_tb/DUT/r2 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File rot_cordic.sv
    1                                                module rot_cordic #(parameter STG  = 12,parameter SIZE = 16,parameter INT  = 4,parameter FRAC = 12 ,parameter factor =16'h09b8) 
    2                                                 (
    3                                                    input                                clk,
    4                                                    input                              rst_n,
    5                                                    input                              start,  
    6                                                    input     signed [SIZE-1:0]          Xin, 
    7                                                    input     signed [SIZE-1:0]          Yin,
    8                                                    input     signed [SIZE-1:0]        angle,
    9                                                    output    logic  signed [SIZE-1:0]         Xout,
    10                                                   output    logic  signed [SIZE-1:0]         Yout,
    11                                                   output    logic                       done
    12                                               );
    13                                               ////***********************************************REGISTERS*********************************************************////
    14                                               logic   signed     [SIZE-1:0]    X_reg;
    15                                               logic   signed     [SIZE-1:0]    Y_reg;
    16                                               logic   signed     [SIZE-1:0]    theta;
    17                                               logic   signed     [SIZE-1:0]  X_shift;
    18                                               //logic   signed     [SIZE-1:0]  factor;
    19                                               logic   signed     [SIZE-1:0]  Y_shift;
    20                                               logic                       theta_sign;
    21                                               logic              [3:0]     itr_count;
    22                                               logic   signed [(SIZE*2)-1 : 0] X_mul ,Y_mul;
    23                                               ////***********************************************arctan table*********************************************************////
    24                                               logic signed [SIZE-1:0] atan_table[0:14];
    25                                               assign atan_table[00] = 16'h0c90; // 45.000 Radian -> atan(2^0)
    26                                               assign atan_table[01] = 16'h076b; // 26.565 Radian -> atan(2^-1)
    27                                               assign atan_table[02] = 16'h03EB;
    28                                               assign atan_table[03] = 16'h01fd; // 14.036 Radian -> atan(2^-2)
    29                                               assign atan_table[04] = 16'h00ff; // atan(2^-n)
    30                                               assign atan_table[05] = 16'h007f;
    31                                               assign atan_table[06] = 16'h003f;
    32                                               assign atan_table[07] = 16'h001f;
    33                                               assign atan_table[08] = 16'h000f;
    34                                               assign atan_table[09] = 16'h0007;
    35                                               assign atan_table[10] = 16'h0003;
    36                                               assign atan_table[11] = 16'h0001;
    37                                               ////****************************************************proc-block************************************************************////
    38              1                         50     always @(posedge clk , negedge rst_n) begin
    39                                                 if(!rst_n)begin
    40              1                          2         X_reg     <=0;
    41              1                          2         Y_reg     <=0;
    42              1                          2         theta     <=0;
    43              1                          2         done      <=0;
    44              1                          2         itr_count <= STG;
    45                                                 //  factor<=16'h09b8;
    46                                                  end 
    47                                                  else if(start) begin
    48              1                          3         X_reg       <=  Xin;
    49              1                          3         Y_reg       <=  Yin;
    50              1                          3         theta       <=angle;
    51              1                          3         itr_count   <=    0;
    52              1                          3         done        <=    0;
    53                                                  end 
    54                                                  else begin
    55              1                         45         done <=0;
    56                                                   if(itr_count != STG) begin
    57              1                         36           X_reg <= theta_sign ? X_reg + Y_shift : X_reg - Y_shift;
    58              1                         36           Y_reg <= theta_sign ? Y_reg - X_shift : Y_reg + X_shift;
    59              1                         36           theta <= theta_sign ? theta + atan_table[itr_count] : theta - atan_table[itr_count];  
    60                                                           if(itr_count == STG-1) begin
    61              1                          3                     done<=1;
    62              1                          3                     itr_count <= STG;
    63                                                           end
    64                                                           else begin
    65              1                         33                     itr_count <= itr_count +1;
    66              1                         33                     done <= 0;
    67                                                           end
    68                                                   end
    69                                                 end
    70                                               end
    71                                               /////*************************************************************assigning****************************************************/////
    72              1                         41     always_comb begin 
    73              1                         41       X_shift    = X_reg>>>itr_count;                 //signed shift right
    74              1                         41       Y_shift    = Y_reg>>>itr_count;
    75              1                         41       theta_sign =theta[SIZE-1];                     //theta_sign=1 if z[i]<0
    76              1                         41       X_mul =    ($signed(X_reg) * $signed(factor))>>>12;
    77              1                         41       Y_mul =    ($signed(Y_reg) * $signed(factor))>>>12;
    78              1                         41       Xout       =  X_mul;
    79              1                         41       Yout       =  Y_mul;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        466       287       179    61.58%

================================Toggle Details================================

Toggle Coverage for instance /matrix_inv_tb/DUT/r2 --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                      X_mul[31-13]           0           0                                0.00 
                                       X_mul[12-0]           1           1                              100.00 
                                      X_reg[15-13]           0           0                                0.00 
                                       X_reg[12-0]           1           1                              100.00 
                                    X_shift[15-12]           0           0                                0.00 
                                     X_shift[11-0]           1           1                              100.00 
                                          Xin[0-2]           0           0                                0.00 
                                            Xin[3]           1           1                              100.00 
                                            Xin[4]           0           0                                0.00 
                                            Xin[5]           1           1                              100.00 
                                          Xin[6-7]           0           0                                0.00 
                                         Xin[8-10]           1           1                              100.00 
                                        Xin[11-15]           0           0                                0.00 
                                       Xout[15-13]           0           0                                0.00 
                                        Xout[12-0]           1           1                              100.00 
                                      Y_mul[31-12]           0           0                                0.00 
                                       Y_mul[11-0]           1           1                              100.00 
                                      Y_reg[15-13]           0           0                                0.00 
                                       Y_reg[12-0]           1           1                              100.00 
                                    Y_shift[15-13]           0           0                                0.00 
                                     Y_shift[12-0]           1           1                              100.00 
                                         Yin[0-10]           0           0                                0.00 
                                        Yin[11-12]           1           1                              100.00 
                                        Yin[13-15]           0           0                                0.00 
                                       Yout[15-12]           0           0                                0.00 
                                        Yout[11-0]           1           1                              100.00 
                                        angle[0-4]           0           1                               50.00 
                                          angle[5]           0           0                                0.00 
                                        angle[6-7]           1           1                              100.00 
                                          angle[8]           0           1                               50.00 
                                          angle[9]           0           0                                0.00 
                                         angle[10]           0           1                               50.00 
                                      angle[11-15]           1           1                              100.00 
                                               clk           1           1                              100.00 
                                              done           1           1                              100.00 
                                    itr_count[3-0]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                             start           1           1                              100.00 
                                       theta[15-0]           1           1                              100.00 
                                        theta_sign           1           1                              100.00 

Total Node Count     =        233 
Toggled Node Count   =        140 
Untoggled Node Count =         93 

Toggle Coverage      =      61.58% (287 of 466 bins)

=================================================================================
=== Instance: /matrix_inv_tb/DUT/r3
=== Design Unit: work.rot_cordic
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        13        13         0   100.00%

================================Branch Details================================

Branch Coverage for instance /matrix_inv_tb/DUT/r3

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File rot_cordic.sv
------------------------------------IF Branch------------------------------------
    39                                        50     Count coming in to IF
    39              1                          2       if(!rst_n)begin
    47              1                          3        else if(start) begin
    54              1                         45        else begin
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    56                                        45     Count coming in to IF
    56              1                         36         if(itr_count != STG) begin
                                               9     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    57                                        36     Count coming in to IF
    57              1                         17           X_reg <= theta_sign ? X_reg + Y_shift : X_reg - Y_shift;
    57              2                         19           X_reg <= theta_sign ? X_reg + Y_shift : X_reg - Y_shift;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    58                                        36     Count coming in to IF
    58              1                         17           Y_reg <= theta_sign ? Y_reg - X_shift : Y_reg + X_shift;
    58              2                         19           Y_reg <= theta_sign ? Y_reg - X_shift : Y_reg + X_shift;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    59                                        36     Count coming in to IF
    59              1                         17           theta <= theta_sign ? theta + atan_table[itr_count] : theta - atan_table[itr_count];  
    59              2                         19           theta <= theta_sign ? theta + atan_table[itr_count] : theta - atan_table[itr_count];  
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    60                                        36     Count coming in to IF
    60              1                          3                 if(itr_count == STG-1) begin
    64              1                         33                 else begin
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         2         0   100.00%

================================Condition Details================================

Condition Coverage for instance /matrix_inv_tb/DUT/r3 --

  File rot_cordic.sv
----------------Focused Condition View-------------------
Line       56 Item    1  (itr_count != 12)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (itr_count != 12)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (itr_count != 12)_0   -                             
  Row   2:          1  (itr_count != 12)_1   -                             

----------------Focused Condition View-------------------
Line       60 Item    1  (itr_count == (12 - 1))
Condition totals: 1 of 1 input term covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  (itr_count == (12 - 1))         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  (itr_count == (12 - 1))_0  -                             
  Row   2:          1  (itr_count == (12 - 1))_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      27        27         0   100.00%

================================Statement Details================================

Statement Coverage for instance /matrix_inv_tb/DUT/r3 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File rot_cordic.sv
    1                                                module rot_cordic #(parameter STG  = 12,parameter SIZE = 16,parameter INT  = 4,parameter FRAC = 12 ,parameter factor =16'h09b8) 
    2                                                 (
    3                                                    input                                clk,
    4                                                    input                              rst_n,
    5                                                    input                              start,  
    6                                                    input     signed [SIZE-1:0]          Xin, 
    7                                                    input     signed [SIZE-1:0]          Yin,
    8                                                    input     signed [SIZE-1:0]        angle,
    9                                                    output    logic  signed [SIZE-1:0]         Xout,
    10                                                   output    logic  signed [SIZE-1:0]         Yout,
    11                                                   output    logic                       done
    12                                               );
    13                                               ////***********************************************REGISTERS*********************************************************////
    14                                               logic   signed     [SIZE-1:0]    X_reg;
    15                                               logic   signed     [SIZE-1:0]    Y_reg;
    16                                               logic   signed     [SIZE-1:0]    theta;
    17                                               logic   signed     [SIZE-1:0]  X_shift;
    18                                               //logic   signed     [SIZE-1:0]  factor;
    19                                               logic   signed     [SIZE-1:0]  Y_shift;
    20                                               logic                       theta_sign;
    21                                               logic              [3:0]     itr_count;
    22                                               logic   signed [(SIZE*2)-1 : 0] X_mul ,Y_mul;
    23                                               ////***********************************************arctan table*********************************************************////
    24                                               logic signed [SIZE-1:0] atan_table[0:14];
    25                                               assign atan_table[00] = 16'h0c90; // 45.000 Radian -> atan(2^0)
    26                                               assign atan_table[01] = 16'h076b; // 26.565 Radian -> atan(2^-1)
    27                                               assign atan_table[02] = 16'h03EB;
    28                                               assign atan_table[03] = 16'h01fd; // 14.036 Radian -> atan(2^-2)
    29                                               assign atan_table[04] = 16'h00ff; // atan(2^-n)
    30                                               assign atan_table[05] = 16'h007f;
    31                                               assign atan_table[06] = 16'h003f;
    32                                               assign atan_table[07] = 16'h001f;
    33                                               assign atan_table[08] = 16'h000f;
    34                                               assign atan_table[09] = 16'h0007;
    35                                               assign atan_table[10] = 16'h0003;
    36                                               assign atan_table[11] = 16'h0001;
    37                                               ////****************************************************proc-block************************************************************////
    38              1                         50     always @(posedge clk , negedge rst_n) begin
    39                                                 if(!rst_n)begin
    40              1                          2         X_reg     <=0;
    41              1                          2         Y_reg     <=0;
    42              1                          2         theta     <=0;
    43              1                          2         done      <=0;
    44              1                          2         itr_count <= STG;
    45                                                 //  factor<=16'h09b8;
    46                                                  end 
    47                                                  else if(start) begin
    48              1                          3         X_reg       <=  Xin;
    49              1                          3         Y_reg       <=  Yin;
    50              1                          3         theta       <=angle;
    51              1                          3         itr_count   <=    0;
    52              1                          3         done        <=    0;
    53                                                  end 
    54                                                  else begin
    55              1                         45         done <=0;
    56                                                   if(itr_count != STG) begin
    57              1                         36           X_reg <= theta_sign ? X_reg + Y_shift : X_reg - Y_shift;
    58              1                         36           Y_reg <= theta_sign ? Y_reg - X_shift : Y_reg + X_shift;
    59              1                         36           theta <= theta_sign ? theta + atan_table[itr_count] : theta - atan_table[itr_count];  
    60                                                           if(itr_count == STG-1) begin
    61              1                          3                     done<=1;
    62              1                          3                     itr_count <= STG;
    63                                                           end
    64                                                           else begin
    65              1                         33                     itr_count <= itr_count +1;
    66              1                         33                     done <= 0;
    67                                                           end
    68                                                   end
    69                                                 end
    70                                               end
    71                                               /////*************************************************************assigning****************************************************/////
    72              1                         41     always_comb begin 
    73              1                         41       X_shift    = X_reg>>>itr_count;                 //signed shift right
    74              1                         41       Y_shift    = Y_reg>>>itr_count;
    75              1                         41       theta_sign =theta[SIZE-1];                     //theta_sign=1 if z[i]<0
    76              1                         41       X_mul =    ($signed(X_reg) * $signed(factor))>>>12;
    77              1                         41       Y_mul =    ($signed(Y_reg) * $signed(factor))>>>12;
    78              1                         41       Xout       =  X_mul;
    79              1                         41       Yout       =  Y_mul;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        466       329       137    70.60%

================================Toggle Details================================

Toggle Coverage for instance /matrix_inv_tb/DUT/r3 --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                      X_mul[31-12]           0           0                                0.00 
                                         X_mul[11]           0           1                               50.00 
                                       X_mul[10-0]           1           1                              100.00 
                                      X_reg[15-13]           0           0                                0.00 
                                         X_reg[12]           0           1                               50.00 
                                       X_reg[11-0]           1           1                              100.00 
                                    X_shift[15-13]           0           0                                0.00 
                                     X_shift[12-0]           1           1                              100.00 
                                         Xin[0-11]           0           0                                0.00 
                                           Xin[12]           0           1                               50.00 
                                        Xin[13-15]           0           0                                0.00 
                                       Xout[15-12]           0           0                                0.00 
                                          Xout[11]           0           1                               50.00 
                                        Xout[10-0]           1           1                              100.00 
                                       Y_mul[31-0]           1           1                              100.00 
                                       Y_reg[15-0]           1           1                              100.00 
                                     Y_shift[15-0]           1           1                              100.00 
                                         Yin[0-15]           0           0                                0.00 
                                        Yout[15-0]           1           1                              100.00 
                                        angle[0-4]           0           1                               50.00 
                                          angle[5]           0           0                                0.00 
                                        angle[6-7]           1           1                              100.00 
                                          angle[8]           0           1                               50.00 
                                          angle[9]           0           0                                0.00 
                                         angle[10]           0           1                               50.00 
                                      angle[11-15]           1           1                              100.00 
                                               clk           1           1                              100.00 
                                              done           1           1                              100.00 
                                    itr_count[3-0]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                             start           1           1                              100.00 
                                       theta[15-0]           1           1                              100.00 
                                        theta_sign           1           1                              100.00 

Total Node Count     =        233 
Toggled Node Count   =        159 
Untoggled Node Count =         74 

Toggle Coverage      =      70.60% (329 of 466 bins)

=================================================================================
=== Instance: /matrix_inv_tb/DUT/v1
=== Design Unit: work.vect_cordic
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        13        13         0   100.00%

================================Branch Details================================

Branch Coverage for instance /matrix_inv_tb/DUT/v1

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File VectCORDIC.sv
------------------------------------IF Branch------------------------------------
    45                                        54     Count coming in to IF
    45              1                          6       if(!rst_n)begin
    55              1                          3        else if(start) begin
    63              1                         45        else begin
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    65                                        45     Count coming in to IF
    65              1                         36         if(itr_count != STG) begin
                                               9     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    66                                        36     Count coming in to IF
    66              1                         19           X_reg     <= Y_sign ? X_reg - Y_shift : X_reg  +Y_shift;
    66              2                         17           X_reg     <= Y_sign ? X_reg - Y_shift : X_reg  +Y_shift;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    67                                        36     Count coming in to IF
    67              1                         19           Y_reg     <= Y_sign ? Y_reg + X_shift : Y_reg - X_shift;
    67              2                         17           Y_reg     <= Y_sign ? Y_reg + X_shift : Y_reg - X_shift;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    68                                        36     Count coming in to IF
    68              1                         19           theta_reg <= Y_sign ? theta_reg - atan_table[itr_count] : theta_reg + atan_table[itr_count];
    68              2                         17           theta_reg <= Y_sign ? theta_reg - atan_table[itr_count] : theta_reg + atan_table[itr_count];
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    69                                        36     Count coming in to IF
    69              1                          3                 if(itr_count == STG-1) begin
    73              1                         33                 else begin
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         2         0   100.00%

================================Condition Details================================

Condition Coverage for instance /matrix_inv_tb/DUT/v1 --

  File VectCORDIC.sv
----------------Focused Condition View-------------------
Line       65 Item    1  (itr_count != 12)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (itr_count != 12)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (itr_count != 12)_0   -                             
  Row   2:          1  (itr_count != 12)_1   -                             

----------------Focused Condition View-------------------
Line       69 Item    1  (itr_count == (12 - 1))
Condition totals: 1 of 1 input term covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  (itr_count == (12 - 1))         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  (itr_count == (12 - 1))_0  -                             
  Row   2:          1  (itr_count == (12 - 1))_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      24        24         0   100.00%

================================Statement Details================================

Statement Coverage for instance /matrix_inv_tb/DUT/v1 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File VectCORDIC.sv
    1                                                module vect_cordic #(parameter STG  = 12,parameter SIZE = 16,parameter INT  = 4,parameter FRAC = 12) 
    2                                                 ( 
    3                                                    input                                          clk,
    4                                                    input                                        rst_n,
    5                                                    input                                        start,  
    6                                                    input          signed [SIZE-1:0]          Vect_Xin, 
    7                                                    input          signed [SIZE-1:0]          Vect_Yin,
    8                                                    output  logic  signed [SIZE-1:0]        MagxFactor,
    9                                                    output  logic  signed [SIZE-1:0]             theta,
    10                                                   output  logic                                 done
    11                                               );
    12                                               ////***********************************************REGISTERS*********************************************************////
    13                                               
    14                                               logic   signed     [SIZE-1:0]        X_reg;
    15                                               logic   signed     [SIZE-1:0]        Y_reg;
    16                                               logic   signed     [SIZE:0]    theta_reg;
    17                                               logic   signed     [SIZE:0]      X_shift;
    18                                               logic   signed     [SIZE:0]      Y_shift;
    19                                               logic   signed     [SIZE-1:0]  factor;
    20                                               logic   signed [(SIZE*2)-1 : 0]     Magmul;
    21                                               logic                               Y_sign;
    22                                               logic           [3:0]            itr_count;
    23                                               
    24                                               ////***********************************************arctan table*********************************************************////
    25                                               
    26                                               logic signed [SIZE-1:0] atan_table[0:14];
    27                                               
    28                                               assign atan_table[00] = 16'h0c90; // 45.000 Radian -> atan(2^0)
    29                                               assign atan_table[01] = 16'h076b; // 26.565 Radian -> atan(2^-1)
    30                                               assign atan_table[02] = 16'h03EB;
    31                                               assign atan_table[03] = 16'h01fd; // 14.036 Radian -> atan(2^-2)
    32                                               assign atan_table[04] = 16'h00ff; // atan(2^-n)
    33                                               assign atan_table[05] = 16'h007f;
    34                                               assign atan_table[06] = 16'h003f;
    35                                               assign atan_table[07] = 16'h001f;
    36                                               assign atan_table[08] = 16'h000f;
    37                                               assign atan_table[09] = 16'h0007;
    38                                               assign atan_table[10] = 16'h0003;
    39                                               assign atan_table[11] = 16'h0001;
    40                                               
    41                                               
    42                                               ////*********************************************proc-block******************************************************////
    43                                               
    44              1                         54     always @(posedge clk , negedge rst_n) begin
    45                                                 if(!rst_n)begin
    46              1                          6         X_reg     <=0;
    47              1                          6         Y_reg     <=0;
    48              1                          6         theta_reg <='h0;
    49              1                          6         itr_count <=0;
    50              1                          6         done      <=0;
    51              1                          6         itr_count <= STG;
    52              1                          6         factor<=16'h09b8;
    53                                               
    54                                                  end 
    55                                                  else if(start) begin
    56              1                          3         X_reg       <=  Vect_Xin;
    57              1                          3         Y_reg       <=  Vect_Yin;
    58              1                          3         theta_reg   <=  'h0;
    59              1                          3         itr_count   <=    0;
    60              1                          3         done        <=    0;
    61                                               
    62                                                  end 
    63                                                  else begin
    64              1                         45         done <=0;
    65                                                   if(itr_count != STG) begin
    66              1                         36           X_reg     <= Y_sign ? X_reg - Y_shift : X_reg  +Y_shift;
    67              1                         36           Y_reg     <= Y_sign ? Y_reg + X_shift : Y_reg - X_shift;
    68              1                         36           theta_reg <= Y_sign ? theta_reg - atan_table[itr_count] : theta_reg + atan_table[itr_count];
    69                                                           if(itr_count == STG-1) begin
    70              1                          3                     done<=1;
    71              1                          3                     itr_count <= STG;
    72                                                           end
    73                                                           else begin
    74              1                         33                     itr_count <= itr_count +1;
    75              1                         33                     done <= 0;
    76                                                           end
    77                                                   end
    78                                                 end
    79                                               end
    80                                               /////*************************************************assigning****************************************************/////
    81              1                         46       assign X_shift    = X_reg>>>itr_count;                 //signed shift right
    82              1                         46       assign Y_shift    = Y_reg>>>itr_count;
    83                                                 assign Y_sign     = Y_reg[SIZE-1];                     //y_sign=1 if yreg[i]<0
    84                                                 assign theta      = theta_reg;
    85              1                         33       assign Magmul     = ($signed(X_reg) * $signed(factor))>>>12;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        408       281       127    68.87%

================================Toggle Details================================

Toggle Coverage for instance /matrix_inv_tb/DUT/v1 --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                     Magmul[31-14]           0           0                                0.00 
                                      Magmul[13-0]           1           1                              100.00 
                                 MagxFactor[15-14]           0           0                                0.00 
                                  MagxFactor[13-0]           1           1                              100.00 
                                     Vect_Xin[0-1]           0           1                               50.00 
                                       Vect_Xin[2]           0           0                                0.00 
                                     Vect_Xin[3-6]           0           1                               50.00 
                                       Vect_Xin[7]           1           1                              100.00 
                                       Vect_Xin[8]           0           1                               50.00 
                                       Vect_Xin[9]           1           1                              100.00 
                                      Vect_Xin[10]           0           1                               50.00 
                                      Vect_Xin[11]           0           0                                0.00 
                                      Vect_Xin[12]           0           1                               50.00 
                                      Vect_Xin[13]           1           1                              100.00 
                                   Vect_Xin[14-15]           0           0                                0.00 
                                       Vect_Yin[0]           0           1                               50.00 
                                     Vect_Yin[1-2]           0           0                                0.00 
                                     Vect_Yin[3-4]           0           1                               50.00 
                                       Vect_Yin[5]           0           0                                0.00 
                                     Vect_Yin[6-7]           0           1                               50.00 
                                    Vect_Yin[8-10]           0           0                                0.00 
                                      Vect_Yin[11]           0           1                               50.00 
                                      Vect_Yin[12]           1           1                              100.00 
                                   Vect_Yin[13-15]           0           1                               50.00 
                                         X_reg[15]           0           0                                0.00 
                                       X_reg[14-0]           1           1                              100.00 
                                    X_shift[16-14]           0           0                                0.00 
                                     X_shift[13-0]           1           1                              100.00 
                                       Y_reg[15-0]           1           1                              100.00 
                                     Y_shift[16-0]           1           1                              100.00 
                                            Y_sign           1           1                              100.00 
                                               clk           1           1                              100.00 
                                              done           1           1                              100.00 
                                      factor[15-0]           0           0                                0.00 
                                    itr_count[3-0]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                             start           1           1                              100.00 
                                      theta[15-12]           0           1                               50.00 
                                       theta[11-0]           1           1                              100.00 
                                  theta_reg[16-12]           0           1                               50.00 
                                   theta_reg[11-0]           1           1                              100.00 

Total Node Count     =        204 
Toggled Node Count   =        127 
Untoggled Node Count =         77 

Toggle Coverage      =      68.87% (281 of 408 bins)

=================================================================================
=== Instance: /matrix_inv_tb/DUT/i1/r00
=== Design Unit: work.CustomVect
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        11        11         0   100.00%

================================Branch Details================================

Branch Coverage for instance /matrix_inv_tb/DUT/i1/r00

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File CustomVect.sv
------------------------------------IF Branch------------------------------------
    22                                        24     Count coming in to IF
    22              1                          6       if(!rst_n)begin
    31              1                          1     end  else if(start) begin
    38              1                         17     end else begin
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    41                                        17     Count coming in to IF
    41              1                         12         if(itr_count != STG) begin
                                               5     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    42                                        12     Count coming in to IF
    42              1                          6           Y_reg <= Y_sign ? Y_reg  + X_shift : Y_reg - X_shift;
    42              2                          6           Y_reg <= Y_sign ? Y_reg  + X_shift : Y_reg - X_shift;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    43                                        12     Count coming in to IF
    43              1                          6        RInv_reg <= Y_sign ? RInv_reg - (16'h1000>>>itr_count) : RInv_reg + (16'h1000>>>itr_count);
    43              2                          6        RInv_reg <= Y_sign ? RInv_reg - (16'h1000>>>itr_count) : RInv_reg + (16'h1000>>>itr_count);
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    45                                        12     Count coming in to IF
    45              1                          1                 if(itr_count == STG-1) begin
    49              1                         11               end else begin
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         2         0   100.00%

================================Condition Details================================

Condition Coverage for instance /matrix_inv_tb/DUT/i1/r00 --

  File CustomVect.sv
----------------Focused Condition View-------------------
Line       41 Item    1  (itr_count != 12)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (itr_count != 12)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (itr_count != 12)_0   -                             
  Row   2:          1  (itr_count != 12)_1   -                             

----------------Focused Condition View-------------------
Line       45 Item    1  (itr_count == (12 - 1))
Condition totals: 1 of 1 input term covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  (itr_count == (12 - 1))         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  (itr_count == (12 - 1))_0  -                             
  Row   2:          1  (itr_count == (12 - 1))_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      20        20         0   100.00%

================================Statement Details================================

Statement Coverage for instance /matrix_inv_tb/DUT/i1/r00 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File CustomVect.sv
    1                                                module CustomVect #(parameter STG  = 12,parameter SIZE = 16,parameter INT  = 4,parameter FRAC = 12) 
    2                                                 ( 
    3                                                    input                                     clk,
    4                                                    input                                   rst_n,
    5                                                    input                                   start,  
    6                                                    input          signed [SIZE-1:0]          RIn, 
    7                                                    output logic   signed [SIZE-1:0]         RInv,
    8                                                    output logic                             done
    9                                                );
    10                                               ////***********************************************REGISTERS*********************************************************////
    11                                               
    12                                               logic  signed     [SIZE-1:0]    X_reg;
    13                                               logic  signed     [SIZE-1:0]    Y_reg;
    14                                               logic  signed     [SIZE-1:0] RInv_reg;
    15                                               logic  signed     [SIZE-1:0]  X_shift;
    16                                               logic                         Y_sign;
    17                                               logic            [3:0]     itr_count;
    18                                                
    19                                               ////****************************************************proc-block************************************************************////
    20                                               
    21              1                         24     always @(posedge clk , negedge rst_n) begin
    22                                                 if(!rst_n)begin
    23                                                  
    24              1                          6         itr_count <=0;
    25              1                          6         done      <=0;
    26              1                          6         X_reg     <=0;
    27              1                          6         Y_reg     <=0;
    28              1                          6         RInv_reg  <=0;
    29              1                          6         itr_count <= STG;
    30                                                
    31                                               end  else if(start) begin
    32              1                          1         X_reg  <=   RIn;
    33              1                          1         Y_reg  <=16'h1000;
    34              1                          1     itr_count  <=    0;
    35              1                          1         done   <=    0;
    36              1                          1      RInv_reg  <=    0;
    37                                               
    38                                               end else begin
    39              1                         17         done <=0;
    40                                               
    41                                                   if(itr_count != STG) begin
    42              1                         12           Y_reg <= Y_sign ? Y_reg  + X_shift : Y_reg - X_shift;
    43              1                         12        RInv_reg <= Y_sign ? RInv_reg - (16'h1000>>>itr_count) : RInv_reg + (16'h1000>>>itr_count);
    44                                               
    45                                                           if(itr_count == STG-1) begin
    46              1                          1                          done <=   1;
    47              1                          1                     itr_count <= STG;
    48                                               
    49                                                         end else begin
    50              1                         11                     itr_count <= itr_count +1;
    51              1                         11                     done <= 0;
    52                                                           end
    53                                                   end
    54                                                 end
    55                                               end
    56                                               /////****************************************************assigning****************************************************/////
    57              1                         20       assign X_shift    = X_reg>>>itr_count;                 //signed shift right

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        210       122        88    58.09%

================================Toggle Details================================

Toggle Coverage for instance /matrix_inv_tb/DUT/i1/r00 --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                            RIn[0]           0           0                                0.00 
                                          RIn[1-2]           0           1                               50.00 
                                         RIn[3-11]           0           0                                0.00 
                                        RIn[12-13]           0           1                               50.00 
                                        RIn[14-15]           0           0                                0.00 
                                       RInv[15-13]           0           0                                0.00 
                                       RInv[12-11]           1           1                              100.00 
                                          RInv[10]           0           1                               50.00 
                                           RInv[9]           1           1                              100.00 
                                           RInv[8]           0           1                               50.00 
                                           RInv[7]           1           1                              100.00 
                                           RInv[6]           0           1                               50.00 
                                           RInv[5]           1           1                              100.00 
                                           RInv[4]           0           1                               50.00 
                                           RInv[3]           1           1                              100.00 
                                         RInv[2-1]           0           1                               50.00 
                                           RInv[0]           0           0                                0.00 
                                   RInv_reg[15-13]           0           0                                0.00 
                                   RInv_reg[12-11]           1           1                              100.00 
                                      RInv_reg[10]           0           1                               50.00 
                                       RInv_reg[9]           1           1                              100.00 
                                       RInv_reg[8]           0           1                               50.00 
                                       RInv_reg[7]           1           1                              100.00 
                                       RInv_reg[6]           0           1                               50.00 
                                       RInv_reg[5]           1           1                              100.00 
                                       RInv_reg[4]           0           1                               50.00 
                                       RInv_reg[3]           1           1                              100.00 
                                     RInv_reg[2-1]           0           1                               50.00 
                                       RInv_reg[0]           0           0                                0.00 
                                      X_reg[15-14]           0           0                                0.00 
                                      X_reg[13-12]           0           1                               50.00 
                                       X_reg[11-3]           0           0                                0.00 
                                        X_reg[2-1]           0           1                               50.00 
                                          X_reg[0]           0           0                                0.00 
                                    X_shift[15-14]           0           0                                0.00 
                                     X_shift[13-0]           1           1                              100.00 
                                       Y_reg[15-0]           1           1                              100.00 
                                            Y_sign           1           1                              100.00 
                                               clk           1           1                              100.00 
                                              done           1           1                              100.00 
                                    itr_count[3-0]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                             start           1           1                              100.00 

Total Node Count     =        105 
Toggled Node Count   =         51 
Untoggled Node Count =         54 

Toggle Coverage      =      58.09% (122 of 210 bins)

=================================================================================
=== Instance: /matrix_inv_tb/DUT/i1/r11
=== Design Unit: work.CustomVect
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        11        11         0   100.00%

================================Branch Details================================

Branch Coverage for instance /matrix_inv_tb/DUT/i1/r11

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File CustomVect.sv
------------------------------------IF Branch------------------------------------
    22                                        24     Count coming in to IF
    22              1                          6       if(!rst_n)begin
    31              1                          1     end  else if(start) begin
    38              1                         17     end else begin
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    41                                        17     Count coming in to IF
    41              1                         12         if(itr_count != STG) begin
                                               5     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    42                                        12     Count coming in to IF
    42              1                          5           Y_reg <= Y_sign ? Y_reg  + X_shift : Y_reg - X_shift;
    42              2                          7           Y_reg <= Y_sign ? Y_reg  + X_shift : Y_reg - X_shift;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    43                                        12     Count coming in to IF
    43              1                          5        RInv_reg <= Y_sign ? RInv_reg - (16'h1000>>>itr_count) : RInv_reg + (16'h1000>>>itr_count);
    43              2                          7        RInv_reg <= Y_sign ? RInv_reg - (16'h1000>>>itr_count) : RInv_reg + (16'h1000>>>itr_count);
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    45                                        12     Count coming in to IF
    45              1                          1                 if(itr_count == STG-1) begin
    49              1                         11               end else begin
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         2         0   100.00%

================================Condition Details================================

Condition Coverage for instance /matrix_inv_tb/DUT/i1/r11 --

  File CustomVect.sv
----------------Focused Condition View-------------------
Line       41 Item    1  (itr_count != 12)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (itr_count != 12)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (itr_count != 12)_0   -                             
  Row   2:          1  (itr_count != 12)_1   -                             

----------------Focused Condition View-------------------
Line       45 Item    1  (itr_count == (12 - 1))
Condition totals: 1 of 1 input term covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  (itr_count == (12 - 1))         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  (itr_count == (12 - 1))_0  -                             
  Row   2:          1  (itr_count == (12 - 1))_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      20        20         0   100.00%

================================Statement Details================================

Statement Coverage for instance /matrix_inv_tb/DUT/i1/r11 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File CustomVect.sv
    1                                                module CustomVect #(parameter STG  = 12,parameter SIZE = 16,parameter INT  = 4,parameter FRAC = 12) 
    2                                                 ( 
    3                                                    input                                     clk,
    4                                                    input                                   rst_n,
    5                                                    input                                   start,  
    6                                                    input          signed [SIZE-1:0]          RIn, 
    7                                                    output logic   signed [SIZE-1:0]         RInv,
    8                                                    output logic                             done
    9                                                );
    10                                               ////***********************************************REGISTERS*********************************************************////
    11                                               
    12                                               logic  signed     [SIZE-1:0]    X_reg;
    13                                               logic  signed     [SIZE-1:0]    Y_reg;
    14                                               logic  signed     [SIZE-1:0] RInv_reg;
    15                                               logic  signed     [SIZE-1:0]  X_shift;
    16                                               logic                         Y_sign;
    17                                               logic            [3:0]     itr_count;
    18                                                
    19                                               ////****************************************************proc-block************************************************************////
    20                                               
    21              1                         24     always @(posedge clk , negedge rst_n) begin
    22                                                 if(!rst_n)begin
    23                                                  
    24              1                          6         itr_count <=0;
    25              1                          6         done      <=0;
    26              1                          6         X_reg     <=0;
    27              1                          6         Y_reg     <=0;
    28              1                          6         RInv_reg  <=0;
    29              1                          6         itr_count <= STG;
    30                                                
    31                                               end  else if(start) begin
    32              1                          1         X_reg  <=   RIn;
    33              1                          1         Y_reg  <=16'h1000;
    34              1                          1     itr_count  <=    0;
    35              1                          1         done   <=    0;
    36              1                          1      RInv_reg  <=    0;
    37                                               
    38                                               end else begin
    39              1                         17         done <=0;
    40                                               
    41                                                   if(itr_count != STG) begin
    42              1                         12           Y_reg <= Y_sign ? Y_reg  + X_shift : Y_reg - X_shift;
    43              1                         12        RInv_reg <= Y_sign ? RInv_reg - (16'h1000>>>itr_count) : RInv_reg + (16'h1000>>>itr_count);
    44                                               
    45                                                           if(itr_count == STG-1) begin
    46              1                          1                          done <=   1;
    47              1                          1                     itr_count <= STG;
    48                                               
    49                                                         end else begin
    50              1                         11                     itr_count <= itr_count +1;
    51              1                         11                     done <= 0;
    52                                                           end
    53                                                   end
    54                                                 end
    55                                               end
    56                                               /////****************************************************assigning****************************************************/////
    57              1                         20       assign X_shift    = X_reg>>>itr_count;                 //signed shift right

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        210       126        84    60.00%

================================Toggle Details================================

Toggle Coverage for instance /matrix_inv_tb/DUT/i1/r11 --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                          RIn[0-2]           0           1                               50.00 
                                          RIn[3-4]           0           0                                0.00 
                                            RIn[5]           0           1                               50.00 
                                            RIn[6]           0           0                                0.00 
                                            RIn[7]           0           1                               50.00 
                                            RIn[8]           0           0                                0.00 
                                         RIn[9-10]           0           1                               50.00 
                                           RIn[11]           0           0                                0.00 
                                           RIn[12]           0           1                               50.00 
                                        RIn[13-15]           0           0                                0.00 
                                       RInv[15-13]           0           0                                0.00 
                                          RInv[12]           1           1                              100.00 
                                          RInv[11]           0           1                               50.00 
                                          RInv[10]           1           1                              100.00 
                                         RInv[9-8]           0           1                               50.00 
                                           RInv[7]           1           1                              100.00 
                                           RInv[6]           0           1                               50.00 
                                         RInv[5-4]           1           1                              100.00 
                                         RInv[3-1]           0           1                               50.00 
                                           RInv[0]           0           0                                0.00 
                                   RInv_reg[15-13]           0           0                                0.00 
                                      RInv_reg[12]           1           1                              100.00 
                                      RInv_reg[11]           0           1                               50.00 
                                      RInv_reg[10]           1           1                              100.00 
                                     RInv_reg[9-8]           0           1                               50.00 
                                       RInv_reg[7]           1           1                              100.00 
                                       RInv_reg[6]           0           1                               50.00 
                                     RInv_reg[5-4]           1           1                              100.00 
                                     RInv_reg[3-1]           0           1                               50.00 
                                       RInv_reg[0]           0           0                                0.00 
                                      X_reg[15-13]           0           0                                0.00 
                                         X_reg[12]           0           1                               50.00 
                                         X_reg[11]           0           0                                0.00 
                                       X_reg[10-9]           0           1                               50.00 
                                          X_reg[8]           0           0                                0.00 
                                          X_reg[7]           0           1                               50.00 
                                          X_reg[6]           0           0                                0.00 
                                          X_reg[5]           0           1                               50.00 
                                        X_reg[4-3]           0           0                                0.00 
                                        X_reg[2-0]           0           1                               50.00 
                                    X_shift[15-13]           0           0                                0.00 
                                     X_shift[12-0]           1           1                              100.00 
                                       Y_reg[15-0]           1           1                              100.00 
                                            Y_sign           1           1                              100.00 
                                               clk           1           1                              100.00 
                                              done           1           1                              100.00 
                                    itr_count[3-0]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                             start           1           1                              100.00 

Total Node Count     =        105 
Toggled Node Count   =         48 
Untoggled Node Count =         57 

Toggle Coverage      =      60.00% (126 of 210 bins)

=================================================================================
=== Instance: /matrix_inv_tb/DUT/i1/r22
=== Design Unit: work.CustomVect
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        11        11         0   100.00%

================================Branch Details================================

Branch Coverage for instance /matrix_inv_tb/DUT/i1/r22

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File CustomVect.sv
------------------------------------IF Branch------------------------------------
    22                                        24     Count coming in to IF
    22              1                          6       if(!rst_n)begin
    31              1                          1     end  else if(start) begin
    38              1                         17     end else begin
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    41                                        17     Count coming in to IF
    41              1                         12         if(itr_count != STG) begin
                                               5     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    42                                        12     Count coming in to IF
    42              1                          5           Y_reg <= Y_sign ? Y_reg  + X_shift : Y_reg - X_shift;
    42              2                          7           Y_reg <= Y_sign ? Y_reg  + X_shift : Y_reg - X_shift;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    43                                        12     Count coming in to IF
    43              1                          5        RInv_reg <= Y_sign ? RInv_reg - (16'h1000>>>itr_count) : RInv_reg + (16'h1000>>>itr_count);
    43              2                          7        RInv_reg <= Y_sign ? RInv_reg - (16'h1000>>>itr_count) : RInv_reg + (16'h1000>>>itr_count);
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    45                                        12     Count coming in to IF
    45              1                          1                 if(itr_count == STG-1) begin
    49              1                         11               end else begin
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         2         0   100.00%

================================Condition Details================================

Condition Coverage for instance /matrix_inv_tb/DUT/i1/r22 --

  File CustomVect.sv
----------------Focused Condition View-------------------
Line       41 Item    1  (itr_count != 12)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (itr_count != 12)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (itr_count != 12)_0   -                             
  Row   2:          1  (itr_count != 12)_1   -                             

----------------Focused Condition View-------------------
Line       45 Item    1  (itr_count == (12 - 1))
Condition totals: 1 of 1 input term covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  (itr_count == (12 - 1))         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  (itr_count == (12 - 1))_0  -                             
  Row   2:          1  (itr_count == (12 - 1))_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      20        20         0   100.00%

================================Statement Details================================

Statement Coverage for instance /matrix_inv_tb/DUT/i1/r22 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File CustomVect.sv
    1                                                module CustomVect #(parameter STG  = 12,parameter SIZE = 16,parameter INT  = 4,parameter FRAC = 12) 
    2                                                 ( 
    3                                                    input                                     clk,
    4                                                    input                                   rst_n,
    5                                                    input                                   start,  
    6                                                    input          signed [SIZE-1:0]          RIn, 
    7                                                    output logic   signed [SIZE-1:0]         RInv,
    8                                                    output logic                             done
    9                                                );
    10                                               ////***********************************************REGISTERS*********************************************************////
    11                                               
    12                                               logic  signed     [SIZE-1:0]    X_reg;
    13                                               logic  signed     [SIZE-1:0]    Y_reg;
    14                                               logic  signed     [SIZE-1:0] RInv_reg;
    15                                               logic  signed     [SIZE-1:0]  X_shift;
    16                                               logic                         Y_sign;
    17                                               logic            [3:0]     itr_count;
    18                                                
    19                                               ////****************************************************proc-block************************************************************////
    20                                               
    21              1                         24     always @(posedge clk , negedge rst_n) begin
    22                                                 if(!rst_n)begin
    23                                                  
    24              1                          6         itr_count <=0;
    25              1                          6         done      <=0;
    26              1                          6         X_reg     <=0;
    27              1                          6         Y_reg     <=0;
    28              1                          6         RInv_reg  <=0;
    29              1                          6         itr_count <= STG;
    30                                                
    31                                               end  else if(start) begin
    32              1                          1         X_reg  <=   RIn;
    33              1                          1         Y_reg  <=16'h1000;
    34              1                          1     itr_count  <=    0;
    35              1                          1         done   <=    0;
    36              1                          1      RInv_reg  <=    0;
    37                                               
    38                                               end else begin
    39              1                         17         done <=0;
    40                                               
    41                                                   if(itr_count != STG) begin
    42              1                         12           Y_reg <= Y_sign ? Y_reg  + X_shift : Y_reg - X_shift;
    43              1                         12        RInv_reg <= Y_sign ? RInv_reg - (16'h1000>>>itr_count) : RInv_reg + (16'h1000>>>itr_count);
    44                                               
    45                                                           if(itr_count == STG-1) begin
    46              1                          1                          done <=   1;
    47              1                          1                     itr_count <= STG;
    48                                               
    49                                                         end else begin
    50              1                         11                     itr_count <= itr_count +1;
    51              1                         11                     done <= 0;
    52                                                           end
    53                                                   end
    54                                                 end
    55                                               end
    56                                               /////****************************************************assigning****************************************************/////
    57              1                         20       assign X_shift    = X_reg>>>itr_count;                 //signed shift right

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        210       120        90    57.14%

================================Toggle Details================================

Toggle Coverage for instance /matrix_inv_tb/DUT/i1/r22 --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                          RIn[0-1]           0           0                                0.00 
                                          RIn[2-6]           0           1                               50.00 
                                         RIn[7-10]           0           0                                0.00 
                                           RIn[11]           0           1                               50.00 
                                        RIn[12-15]           0           0                                0.00 
                                       RInv[15-13]           0           0                                0.00 
                                        RInv[12-9]           0           1                               50.00 
                                         RInv[8-6]           1           1                              100.00 
                                           RInv[5]           0           1                               50.00 
                                           RInv[4]           1           1                              100.00 
                                           RInv[3]           0           1                               50.00 
                                           RInv[2]           1           1                              100.00 
                                           RInv[1]           0           1                               50.00 
                                           RInv[0]           0           0                                0.00 
                                   RInv_reg[15-13]           0           0                                0.00 
                                    RInv_reg[12-9]           0           1                               50.00 
                                     RInv_reg[8-6]           1           1                              100.00 
                                       RInv_reg[5]           0           1                               50.00 
                                       RInv_reg[4]           1           1                              100.00 
                                       RInv_reg[3]           0           1                               50.00 
                                       RInv_reg[2]           1           1                              100.00 
                                       RInv_reg[1]           0           1                               50.00 
                                       RInv_reg[0]           0           0                                0.00 
                                      X_reg[15-12]           0           0                                0.00 
                                         X_reg[11]           0           1                               50.00 
                                       X_reg[10-7]           0           0                                0.00 
                                        X_reg[6-2]           0           1                               50.00 
                                        X_reg[1-0]           0           0                                0.00 
                                    X_shift[15-12]           0           0                                0.00 
                                     X_shift[11-0]           1           1                              100.00 
                                       Y_reg[15-0]           1           1                              100.00 
                                            Y_sign           1           1                              100.00 
                                               clk           1           1                              100.00 
                                              done           1           1                              100.00 
                                    itr_count[3-0]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                             start           1           1                              100.00 

Total Node Count     =        105 
Toggled Node Count   =         47 
Untoggled Node Count =         58 

Toggle Coverage      =      57.14% (120 of 210 bins)

=================================================================================
=== Instance: /matrix_inv_tb/DUT/i1
=== Design Unit: work.RinvrMatrix
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        12        12         0   100.00%

================================Branch Details================================

Branch Coverage for instance /matrix_inv_tb/DUT/i1

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RinvrMatrix.sv
------------------------------------IF Branch------------------------------------
    91                                        35     Count coming in to IF
    91              1                          2         if (!rst_n) begin                               
    110             1                          1         end else if(shift_en[0]) begin      // Update the matrix with input values
    123             1                          1      end else if (Rinv_Dn_calc ) begin
    144             1                         10         end else if (Rinv_Read) begin
                                              21     All False Count
Branch totals: 5 hits of 5 branches = 100.00%

------------------------------------IF Branch------------------------------------
    146                                       10     Count coming in to IF
    146             1                          9          if(!Rinv_Finish) begin
                                               1     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    150                                        9     Count coming in to IF
    150             1                          1        if ( (count_i == 2'b10 ) && (count_j == 2'b10) ) begin
    155             1                          2           end else if(count_j==2'b10) begin
    160             1                          6           end else begin
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    199                                       24     Count coming in to IF
    199             1                          2         if (!rst_n) begin  
    208             1                         22           else begin
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       3         3         0   100.00%

================================Condition Details================================

Condition Coverage for instance /matrix_inv_tb/DUT/i1 --

  File RinvrMatrix.sv
----------------Focused Condition View-------------------
Line       150 Item    1  ((count_i == 2) && (count_j == 2))
Condition totals: 2 of 2 input terms covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  (count_i == 2)         Y
  (count_j == 2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count_i == 2)_0      -                             
  Row   2:          1  (count_i == 2)_1      (count_j == 2)                
  Row   3:          1  (count_j == 2)_0      (count_i == 2)                
  Row   4:          1  (count_j == 2)_1      (count_i == 2)                

----------------Focused Condition View-------------------
Line       155 Item    1  (count_j == 2)
Condition totals: 1 of 1 input term covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  (count_j == 2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count_j == 2)_0      -                             
  Row   2:          1  (count_j == 2)_1      -                             


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                      3         1         2    33.33%

================================Expression Details================================

Expression Coverage for instance /matrix_inv_tb/DUT/i1 --

  File RinvrMatrix.sv
----------------Focused Expression View-----------------
Line       86 Item    1  ((done1 && done2) && done3)
Expression totals: 1 of 3 input terms covered = 33.33%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
       done1         Y
       done2         N  '_0' not hit             Hit '_0'
       done3         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  done1_0               -                             
  Row   2:          1  done1_1               (done3 && done2)              
  Row   3:    ***0***  done2_0               done1                         
  Row   4:          1  done2_1               (done3 && done1)              
  Row   5:    ***0***  done3_0               (done1 && done2)              
  Row   6:          1  done3_1               (done1 && done2)              


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      69        69         0   100.00%

================================Statement Details================================

Statement Coverage for instance /matrix_inv_tb/DUT/i1 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RinvrMatrix.sv
    1                                                module RinvrMatrix #(parameter STG  = 12,parameter SIZE = 16,parameter INT  = 4,parameter FRAC = 12) 
    2                                                  (
    3                                                    input                                        clk,
    4                                                    input                                      rst_n, 
    5                                                    input                                      start, 
    6                                                    input  logic                           Rinv_Read, 
    7                                                
    8                                                //diagonal(input to cordic)
    9                                                    input logic signed [SIZE-1:0]             RIn_00,
    10                                                   input logic signed [SIZE-1:0]             RIn_11,
    11                                                   input logic signed [SIZE-1:0]             RIn_22,
    12                                               
    13                                               //upper
    14                                                   input logic signed [SIZE-1:0]             RIn_01,
    15                                                   input logic signed [SIZE-1:0]             RIn_02,
    16                                                   input logic signed [SIZE-1:0]             RIn_12,
    17                                               
    18                                                   output logic                         Rinv_Finish,
    19                                                   output logic                     Rinv_Mat_DnLoad,
    20                                                   output logic signed [SIZE-1:0]         R_invElem              //output is one element each clk cylce
    21                                               );
    22                                               
    23                                               ////***********************************************Internal register*************************************************////
    24                                               
    25                                                logic [SIZE-1:0] matrix_internal [0:2][0:2];        // 3x3 matrix of 16-logic logic vectors
    26                                               
    27                                               ////*********************************************output from cordic********************************************////
    28                                                       
    29                                                 logic   signed [SIZE-1:0]         RInv_00;
    30                                                 logic   signed [SIZE-1:0]         RInv_11;
    31                                                 logic   signed [SIZE-1:0]         RInv_22;
    32                                               
    33                                               ////*********************************************elements calc************************************************////
    34                                               
    35                                                 logic   signed [SIZE-1:0]         Rcalc_01;
    36                                                 logic   signed [SIZE-1:0]         Rcalc_02;
    37                                                 logic   signed [SIZE-1:0]         Rcalc_12;
    38                                                 logic   signed [SIZE-1:0]         R_invElem_reg;
    39                                               ////*********************************************internal signals************************************************////
    40                                               
    41                                                integer                                     i;
    42                                                integer                                     j;
    43                                               
    44                                                 // Counters
    45                                                 logic        [1:0]                   count_i;
    46                                                 logic        [1:0]                   count_j;
    47                                                 logic        [2:0]                   shift_en;
    48                                               
    49                                                 logic                                   done1;
    50                                                 logic                                   done2;
    51                                                 logic                                   done3;
    52                                                 logic                           Rinv_Dn_calc ;
    53                                               
    54                                                 logic  signed  [(3*SIZE)-1:0]         Rmul_01;                    
    55                                                 logic  signed  [(3*SIZE)-1:0]         Rmul_12;
    56                                                 logic  signed  [(5*SIZE)-1:0]       Rmul_02_1;
    57                                                 logic  signed  [(3*SIZE)-1:0]      Rmul_02_48;
    58                                                 logic  signed  [SIZE-1:0]         Rmul_02_fin;           //after subtraction final 02 
    59                                               
    60                                               logic  signed  [(2*SIZE)-1:0]        Rmul_01_com;
    61                                               logic  signed  [(2*SIZE)-1:0]        rmul_01_reg;
    62                                               
    63                                               logic  signed  [(2*SIZE)-1:0]        Rmul_12_com;
    64                                               logic  signed  [(2*SIZE)-1:0]        rmul_12_reg;
    65                                               
    66                                               logic  signed  [(2*SIZE)-1:0]        Rmul_02_1_com;
    67                                               logic  signed  [(2*SIZE)-1:0]        rmul_02_1_reg;
    68                                               
    69                                               logic  signed  [(2*SIZE)-1:0]        Rmul_02_48_com;
    70                                               logic  signed  [(2*SIZE)-1:0]        rmul_02_48_reg;
    71                                               
    72                                               logic  signed  [(2*SIZE)-1:0]        Rmul_12_Mreg;
    73                                               
    74                                               ////*********************************************CORDIC Instant***********************************************////
    75                                               
    76                                                CustomVect r00 (.clk(clk),.rst_n(rst_n),.RInv(RInv_00),.RIn(RIn_00),.done(done1),.start(start));
    77                                               
    78                                                CustomVect r11 (.clk(clk),.rst_n(rst_n),.RInv(RInv_11),.RIn(RIn_11),.done(done2),.start(start));
    79                                               
    80                                                CustomVect r22 (.clk(clk),.rst_n(rst_n),.RInv(RInv_22),.RIn(RIn_22),.done(done3),.start(start));
    81                                               
    82                                               
    83                                               ////*********************************************enable signal************************************************////
    84                                               logic                              RInv_Enable;
    85                                               
    86              1                          4     assign RInv_Enable = (done1 && done2 && done3);
    87                                                
    88                                               ////*********************************************proc-block***********************************************////
    89                                               
    90              1                         35       always @(posedge clk or negedge rst_n) begin
    91                                                   if (!rst_n) begin                               
    92                                                     
    93              1                          2            for (i = 0; i < 3 ; i++) begin                     // Reset the matrix to default values with nested for loop
    93              2                          6     
    94              1                          6             for (j =0; j < 3; j++) begin
    94              2                         18     
    95                                               
    96              1                         18                 matrix_internal[i][j] <= 16'h0000;
    97                                                     end
    98                                                         end
    99              1                          2                  Rcalc_01      <= 0;
    100             1                          2                  Rcalc_12      <= 0;
    101             1                          2                  Rcalc_02      <= 0;
    102             1                          2                  R_invElem_reg <='h0000;
    103             1                          2                  Rinv_Finish   <= 0;
    104             1                          2                  Rinv_Dn_calc  <= 0;
    105             1                          2                  count_i       <= 0;
    106             1                          2                  count_j       <= 0;
    107             1                          2                  Rinv_Mat_DnLoad  <= 0;
    108             1                          2                  rmul_01_reg<=0;
    109                                              
    110                                                  end else if(shift_en[0]) begin      // Update the matrix with input values
    111                                              
    112             1                          1              Rcalc_01        <= Rmul_01;
    113             1                          1              Rcalc_12        <= Rmul_12;
    114             1                          1              Rcalc_02        <= Rmul_02_fin; 
    115             1                          1              Rinv_Dn_calc    <=1; 
    116                                              
    117             1                          1              Rinv_Mat_DnLoad <=0;
    118             1                          1              Rinv_Finish     <=0;
    119             1                          1              count_i         <=0;
    120             1                          1              count_j         <=0;
    121             1                          1              R_invElem_reg   <=0;
    122                                              
    123                                               end else if (Rinv_Dn_calc ) begin
    124                                              
    125             1                          1             matrix_internal[0][0]  <= RInv_00 ;
    126             1                          1             matrix_internal[0][1]  <= -Rcalc_01;
    127             1                          1             matrix_internal[0][2]  <= Rcalc_02;
    128             1                          1             matrix_internal[1][0]  <= 16'h0000;
    129             1                          1             matrix_internal[1][1]  <= RInv_11 ;
    130             1                          1             matrix_internal[1][2]  <= -Rcalc_12;
    131             1                          1             matrix_internal[2][0]  <= 16'h0000;
    132             1                          1             matrix_internal[2][1]  <= 16'h0000;        
    133             1                          1             matrix_internal[2][2]  <= RInv_22 ;
    134                                              
    135             1                          1             Rinv_Mat_DnLoad        <= 1;
    136             1                          1             Rinv_Dn_calc           <= 0;
    137             1                          1             Rinv_Finish            <= 0;
    138             1                          1             Rinv_Dn_calc           <= 0;
    139             1                          1             count_i                <= 0;
    140             1                          1             count_j                <= 0;
    141             1                          1             R_invElem_reg          <= 0;
    142                                              
    143                                              
    144                                                  end else if (Rinv_Read) begin
    145                                              
    146                                                   if(!Rinv_Finish) begin
    147                                              
    148             1                          9                    R_invElem_reg <= matrix_internal[count_i][count_j];
    149                                              
    150                                                 if ( (count_i == 2'b10 ) && (count_j == 2'b10) ) begin
    151                                              
    152             1                          1                     Rinv_Finish <= 1;
    153                                                              
    154                                              
    155                                                    end else if(count_j==2'b10) begin
    156                                              
    157             1                          2                         count_i <=count_i+1;
    158             1                          2                         count_j <='0;
    159                                              
    160                                                    end else begin
    161                                              
    162             1                          6                         count_j <=count_j+1;    
    163                                                    end
    164                                              
    165                                                   end 
    166                                                end
    167                                                    
    168                                                end
    169                                              
    170                                              
    171                                              
    172                                              
    173                                               /////***********************************************assigning************************************************/////
    174                                              
    175                                               
    176                                                assign R_invElem        = R_invElem_reg;
    177                                              
    178             1                         16       assign Rmul_01_com      = ($signed((RIn_01))        * $signed((RInv_11))   >>> 12);
    179                                              
    180             1                         27       assign Rmul_01          = ($signed((rmul_01_reg))   * $signed((RInv_00))   >>> 12);
    181                                              
    182                                              
    183             1                         16       assign Rmul_12_com      = ($signed((RIn_12))        * $signed((RInv_22)) ) >>> 12;
    184                                              
    185             1                         27       assign Rmul_12          = ($signed((rmul_12_reg))   * $signed((RInv_11)) ) >>> 12;
    186                                              
    187             1                         14       assign Rmul_02_1_com    = (($signed( Rmul_12_Mreg)   * $signed(RIn_01))) >>> 12;
    188                                              
    189             1                         25       assign Rmul_02_1        = ( $signed(rmul_02_1_reg)   * $signed(RInv_00)) >>> 12;
    190                                              
    191             1                         16       assign Rmul_02_48_com   = ($signed(RIn_02)         * $signed(RInv_22)) >>> 12;
    192                                              
    193             1                         27       assign Rmul_02_48       = ($signed(rmul_02_48_reg) * $signed(RInv_00)) >>> 12;
    194                                              
    195             1                         26       assign Rmul_02_fin      =  Rmul_02_1[15:0]  -  Rmul_02_48[15:0] ; 
    196                                              
    197                                              
    198             1                         24        always @(posedge clk or negedge rst_n) begin
    199                                                  if (!rst_n) begin  
    200                                              
    201             1                          2                rmul_01_reg    <= 0;
    202             1                          2                rmul_12_reg    <= 0;
    203             1                          2                rmul_02_1_reg  <= 0;
    204             1                          2                Rmul_12_Mreg   <= 0;
    205             1                          2                rmul_02_48_reg <= 0;
    206             1                          2                shift_en       <= 0;
    207                                                    end
    208                                                    else begin
    209             1                         22             shift_en       <= {RInv_Enable,shift_en[2:1]};
    210             1                         22             rmul_01_reg    <= Rmul_01_com;
    211             1                         22             rmul_12_reg    <= Rmul_12_com;
    212             1                         22             rmul_02_1_reg  <= Rmul_02_1_com;
    213             1                         22             Rmul_12_Mreg   <= Rmul_12;
    214             1                         22             rmul_02_48_reg <= Rmul_02_48_com;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                       1668       489      1179    29.31%

================================Toggle Details================================

Toggle Coverage for instance /matrix_inv_tb/DUT/i1 --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                         RIn_00[0]           0           0                                0.00 
                                       RIn_00[1-2]           0           1                               50.00 
                                      RIn_00[3-11]           0           0                                0.00 
                                     RIn_00[12-13]           0           1                               50.00 
                                     RIn_00[14-15]           0           0                                0.00 
                                         RIn_01[0]           0           0                                0.00 
                                         RIn_01[1]           0           1                               50.00 
                                      RIn_01[2-12]           0           0                                0.00 
                                        RIn_01[13]           0           1                               50.00 
                                     RIn_01[14-15]           0           0                                0.00 
                                      RIn_02[0-11]           0           1                               50.00 
                                     RIn_02[12-15]           0           0                                0.00 
                                       RIn_11[0-2]           0           1                               50.00 
                                       RIn_11[3-4]           0           0                                0.00 
                                         RIn_11[5]           0           1                               50.00 
                                         RIn_11[6]           0           0                                0.00 
                                         RIn_11[7]           0           1                               50.00 
                                         RIn_11[8]           0           0                                0.00 
                                      RIn_11[9-10]           0           1                               50.00 
                                        RIn_11[11]           0           0                                0.00 
                                        RIn_11[12]           0           1                               50.00 
                                     RIn_11[13-15]           0           0                                0.00 
                                         RIn_12[0]           0           0                                0.00 
                                       RIn_12[1-2]           0           1                               50.00 
                                         RIn_12[3]           0           0                                0.00 
                                         RIn_12[4]           0           1                               50.00 
                                         RIn_12[5]           0           0                                0.00 
                                       RIn_12[6-7]           0           1                               50.00 
                                         RIn_12[8]           0           0                                0.00 
                                         RIn_12[9]           0           1                               50.00 
                                     RIn_12[10-15]           0           0                                0.00 
                                       RIn_22[0-1]           0           0                                0.00 
                                       RIn_22[2-6]           0           1                               50.00 
                                      RIn_22[7-10]           0           0                                0.00 
                                        RIn_22[11]           0           1                               50.00 
                                     RIn_22[12-15]           0           0                                0.00 
                                    RInv_00[15-13]           0           0                                0.00 
                                    RInv_00[12-11]           1           1                              100.00 
                                       RInv_00[10]           0           1                               50.00 
                                        RInv_00[9]           1           1                              100.00 
                                        RInv_00[8]           0           1                               50.00 
                                        RInv_00[7]           1           1                              100.00 
                                        RInv_00[6]           0           1                               50.00 
                                        RInv_00[5]           1           1                              100.00 
                                        RInv_00[4]           0           1                               50.00 
                                        RInv_00[3]           1           1                              100.00 
                                      RInv_00[2-1]           0           1                               50.00 
                                        RInv_00[0]           0           0                                0.00 
                                    RInv_11[15-13]           0           0                                0.00 
                                       RInv_11[12]           1           1                              100.00 
                                       RInv_11[11]           0           1                               50.00 
                                       RInv_11[10]           1           1                              100.00 
                                      RInv_11[9-8]           0           1                               50.00 
                                        RInv_11[7]           1           1                              100.00 
                                        RInv_11[6]           0           1                               50.00 
                                      RInv_11[5-4]           1           1                              100.00 
                                      RInv_11[3-1]           0           1                               50.00 
                                        RInv_11[0]           0           0                                0.00 
                                    RInv_22[15-13]           0           0                                0.00 
                                     RInv_22[12-9]           0           1                               50.00 
                                      RInv_22[8-6]           1           1                              100.00 
                                        RInv_22[5]           0           1                               50.00 
                                        RInv_22[4]           1           1                              100.00 
                                        RInv_22[3]           0           1                               50.00 
                                        RInv_22[2]           1           1                              100.00 
                                        RInv_22[1]           0           1                               50.00 
                                        RInv_22[0]           0           0                                0.00 
                                       RInv_Enable           1           1                              100.00 
                                   R_invElem[15-8]           1           1                              100.00 
                                      R_invElem[7]           0           0                                0.00 
                                    R_invElem[6-1]           1           1                              100.00 
                                      R_invElem[0]           0           0                                0.00 
                               R_invElem_reg[15-8]           1           1                              100.00 
                                  R_invElem_reg[7]           0           0                                0.00 
                                R_invElem_reg[6-1]           1           1                              100.00 
                                  R_invElem_reg[0]           0           0                                0.00 
                                   Rcalc_01[15-11]           0           0                                0.00 
                                    Rcalc_01[10-7]           0           1                               50.00 
                                     Rcalc_01[6-4]           0           0                                0.00 
                                       Rcalc_01[3]           0           1                               50.00 
                                       Rcalc_01[2]           0           0                                0.00 
                                       Rcalc_01[1]           0           1                               50.00 
                                       Rcalc_01[0]           0           0                                0.00 
                                   Rcalc_02[15-11]           0           1                               50.00 
                                    Rcalc_02[10-7]           0           0                                0.00 
                                     Rcalc_02[6-4]           0           1                               50.00 
                                       Rcalc_02[3]           0           0                                0.00 
                                     Rcalc_02[2-1]           0           1                               50.00 
                                       Rcalc_02[0]           0           0                                0.00 
                                   Rcalc_12[15-10]           0           0                                0.00 
                                     Rcalc_12[9-6]           0           1                               50.00 
                                     Rcalc_12[5-3]           0           0                                0.00 
                                     Rcalc_12[2-1]           0           1                               50.00 
                                       Rcalc_12[0]           0           0                                0.00 
                                      Rinv_Dn_calc           1           1                              100.00 
                                       Rinv_Finish           0           1                               50.00 
                                   Rinv_Mat_DnLoad           0           1                               50.00 
                                         Rinv_Read           1           1                              100.00 
                                    Rmul_01[47-13]           0           0                                0.00 
                                    Rmul_01[12-10]           1           1                              100.00 
                                        Rmul_01[9]           0           1                               50.00 
                                        Rmul_01[8]           1           1                              100.00 
                                        Rmul_01[7]           0           1                               50.00 
                                        Rmul_01[6]           1           1                              100.00 
                                        Rmul_01[5]           0           0                                0.00 
                                      Rmul_01[4-0]           1           1                              100.00 
                                Rmul_01_com[31-14]           0           0                                0.00 
                                   Rmul_01_com[13]           1           1                              100.00 
                                   Rmul_01_com[12]           0           1                               50.00 
                                   Rmul_01_com[11]           1           1                              100.00 
                                 Rmul_01_com[10-9]           0           1                               50.00 
                                    Rmul_01_com[8]           1           1                              100.00 
                                    Rmul_01_com[7]           0           1                               50.00 
                                  Rmul_01_com[6-5]           1           1                              100.00 
                                  Rmul_01_com[4-2]           0           1                               50.00 
                                    Rmul_01_com[1]           1           1                              100.00 
                                    Rmul_01_com[0]           0           1                               50.00 
                                  Rmul_02_1[79-10]           0           0                                0.00 
                                      Rmul_02_1[9]           0           1                               50.00 
                                    Rmul_02_1[8-0]           1           1                              100.00 
                              Rmul_02_1_com[31-11]           0           0                                0.00 
                               Rmul_02_1_com[10-8]           0           1                               50.00 
                                Rmul_02_1_com[7-1]           1           1                              100.00 
                                  Rmul_02_1_com[0]           0           0                                0.00 
                                 Rmul_02_48[47-12]           0           0                                0.00 
                                    Rmul_02_48[11]           0           1                               50.00 
                                  Rmul_02_48[10-0]           1           1                              100.00 
                             Rmul_02_48_com[31-13]           0           0                                0.00 
                                Rmul_02_48_com[12]           0           1                               50.00 
                              Rmul_02_48_com[11-0]           1           1                              100.00 
                                Rmul_02_fin[15-12]           0           1                               50.00 
                                 Rmul_02_fin[11-0]           1           1                              100.00 
                                    Rmul_12[47-10]           0           0                                0.00 
                                      Rmul_12[9-7]           0           1                               50.00 
                                      Rmul_12[6-0]           1           1                              100.00 
                               Rmul_12_Mreg[31-10]           0           0                                0.00 
                                 Rmul_12_Mreg[9-7]           0           1                               50.00 
                                 Rmul_12_Mreg[6-0]           1           1                              100.00 
                                Rmul_12_com[31-11]           0           0                                0.00 
                                   Rmul_12_com[10]           0           1                               50.00 
                                    Rmul_12_com[9]           1           1                              100.00 
                                    Rmul_12_com[8]           0           1                               50.00 
                                    Rmul_12_com[7]           1           1                              100.00 
                                    Rmul_12_com[6]           0           1                               50.00 
                                  Rmul_12_com[5-0]           1           1                              100.00 
                                               clk           1           1                              100.00 
                                        count_i[1]           0           1                               50.00 
                                        count_i[0]           1           1                              100.00 
                                      count_j[1-0]           1           1                              100.00 
                                             done1           1           1                              100.00 
                                             done2           1           1                              100.00 
                                             done3           1           1                              100.00 
                                           i[31-0]           0           0                                0.00 
                                           j[31-0]           0           0                                0.00 
                                rmul_01_reg[31-14]           0           0                                0.00 
                                   rmul_01_reg[13]           1           1                              100.00 
                                   rmul_01_reg[12]           0           1                               50.00 
                                   rmul_01_reg[11]           1           1                              100.00 
                                 rmul_01_reg[10-9]           0           1                               50.00 
                                    rmul_01_reg[8]           1           1                              100.00 
                                    rmul_01_reg[7]           0           1                               50.00 
                                  rmul_01_reg[6-5]           1           1                              100.00 
                                  rmul_01_reg[4-2]           0           1                               50.00 
                                    rmul_01_reg[1]           1           1                              100.00 
                                    rmul_01_reg[0]           0           1                               50.00 
                              rmul_02_1_reg[31-11]           0           0                                0.00 
                               rmul_02_1_reg[10-8]           0           1                               50.00 
                                rmul_02_1_reg[7-1]           1           1                              100.00 
                                  rmul_02_1_reg[0]           0           0                                0.00 
                             rmul_02_48_reg[31-13]           0           0                                0.00 
                                rmul_02_48_reg[12]           0           1                               50.00 
                              rmul_02_48_reg[11-0]           1           1                              100.00 
                                rmul_12_reg[31-11]           0           0                                0.00 
                                   rmul_12_reg[10]           0           1                               50.00 
                                    rmul_12_reg[9]           1           1                              100.00 
                                    rmul_12_reg[8]           0           1                               50.00 
                                    rmul_12_reg[7]           1           1                              100.00 
                                    rmul_12_reg[6]           0           1                               50.00 
                                  rmul_12_reg[5-0]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                     shift_en[2-0]           1           1                              100.00 
                                             start           1           1                              100.00 

Total Node Count     =        834 
Toggled Node Count   =        181 
Untoggled Node Count =        653 

Toggle Coverage      =      29.31% (489 of 1668 bins)

=================================================================================
=== Instance: /matrix_inv_tb/DUT/mul1
=== Design Unit: work.MulMatrix
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        14        14         0   100.00%

================================Branch Details================================

Branch Coverage for instance /matrix_inv_tb/DUT/mul1

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File MulMatrix.sv
------------------------------------IF Branch------------------------------------
    41                                        27     Count coming in to IF
    41              1                          2         if (!rst_n) begin
    60              1                         10       end else if(write) begin
    80              1                          1       end else if (start_Mul) begin
    104             1                         10        end else if (read_mul) begin
                                               4     All False Count
Branch totals: 5 hits of 5 branches = 100.00%

------------------------------------IF Branch------------------------------------
    67                                        10     Count coming in to IF
    67              1                          1              if ( (wcount_i == 2'b10) && (wcount_j == 2'b10) ) 
                                               9     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    71                                        10     Count coming in to IF
    71              1                          3              if (wcount_j == 2'b10) begin
    76              1                          7           end else 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    106                                       10     Count coming in to IF
    106             1                          9          if(!finish_Mul) begin
                                               1     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    110                                        9     Count coming in to IF
    110             1                          1        if ( (count_i == 2'b10 ) && (count_j == 2'b10) ) begin
    115             1                          2           end else if(count_j==2'b10) begin
    120             1                          6           end else begin
Branch totals: 3 hits of 3 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       6         6         0   100.00%

================================Condition Details================================

Condition Coverage for instance /matrix_inv_tb/DUT/mul1 --

  File MulMatrix.sv
----------------Focused Condition View-------------------
Line       67 Item    1  ((wcount_i == 2) && (wcount_j == 2))
Condition totals: 2 of 2 input terms covered = 100.00%

       Input Term   Covered  Reason for no coverage   Hint
      -----------  --------  -----------------------  --------------
  (wcount_i == 2)         Y
  (wcount_j == 2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (wcount_i == 2)_0     -                             
  Row   2:          1  (wcount_i == 2)_1     (wcount_j == 2)               
  Row   3:          1  (wcount_j == 2)_0     (wcount_i == 2)               
  Row   4:          1  (wcount_j == 2)_1     (wcount_i == 2)               

----------------Focused Condition View-------------------
Line       71 Item    1  (wcount_j == 2)
Condition totals: 1 of 1 input term covered = 100.00%

       Input Term   Covered  Reason for no coverage   Hint
      -----------  --------  -----------------------  --------------
  (wcount_j == 2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (wcount_j == 2)_0     -                             
  Row   2:          1  (wcount_j == 2)_1     -                             

----------------Focused Condition View-------------------
Line       110 Item    1  ((count_i == 2) && (count_j == 2))
Condition totals: 2 of 2 input terms covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  (count_i == 2)         Y
  (count_j == 2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count_i == 2)_0      -                             
  Row   2:          1  (count_i == 2)_1      (count_j == 2)                
  Row   3:          1  (count_j == 2)_0      (count_i == 2)                
  Row   4:          1  (count_j == 2)_1      (count_i == 2)                

----------------Focused Condition View-------------------
Line       115 Item    1  (count_j == 2)
Condition totals: 1 of 1 input term covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  (count_j == 2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count_j == 2)_0      -                             
  Row   2:          1  (count_j == 2)_1      -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      39        39         0   100.00%

================================Statement Details================================

Statement Coverage for instance /matrix_inv_tb/DUT/mul1 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File MulMatrix.sv
    1                                                module MulMatrix #(parameter STG  = 12,parameter SIZE = 16,parameter INT  = 4,parameter FRAC = 12) 
    2                                                  (
    3                                                    input                              clk,
    4                                                    input                              rst_n, 
    5                                                    input                              write, 
    6                                                
    7                                                    input logic signed [SIZE-1:0]      R_invElem,
    8                                                    input logic signed [SIZE-1:0]      Q_TElem,
    9                                                    input logic                        start_Mul, 
    10                                                   input logic                        read_mul, 
    11                                               
    12                                                   output logic                       QTxR_Dn_load,
    13                                                   output logic                       Dn_out_Mul,
    14                                                   output logic                       finish_Mul,
    15                                               
    16                                                   output logic signed [SIZE-1:0]     QTxRInv_Elem
    17                                               );
    18                                               
    19                                               ////**********************************************Internal Matrices*********************************************////
    20                                               
    21                                                logic [SIZE-1:0]      Q_matInternal    [0:2][0:2];        // Q_Transpose 3x3 matrix of 16-logic logic vectors
    22                                               
    23                                                logic [SIZE-1:0]      RInv_matInternal [0:2][0:2];        // R_inverse 3x3 matrix of 16-logic logic vectors
    24                                               
    25                                                logic [(SIZE*2)-1:0]  QTxRInv_Internal [0:2][0:2];       // (QR)inv 3x3 matrix of 16-logic logic vectors
    26                                               
    27                                               
    28                                               ////*********************************************elements calc**********************************************////
    29                                               
    30                                               integer                                  I,J;
    31                                               logic             [1:0]             wcount_i;
    32                                               logic             [1:0]             wcount_j;
    33                                               logic             [1:0]              count_i;
    34                                               logic             [1:0]              count_j;
    35                                               
    36                                               
    37                                               ////*********************************************proc-block***********************************************////
    38                                               
    39              1                         27     always @(posedge clk or negedge rst_n) begin
    40                                               
    41                                                   if (!rst_n) begin
    42              1                          2           for (I = 0; I < 3 ; I++) begin                     // Reset the matrix to default values with nested for loop
    42              2                          6     
    43              1                          6             for (J =0; J < 3; J++) begin
    43              2                         18     
    44                                               
    45              1                         18                 Q_matInternal    [I][J] <=0;
    46              1                         18                 RInv_matInternal [I][J] <=0;
    47              1                         18                 QTxRInv_Internal [I][J] <=0;
    48                                               
    49                                                       end
    50                                                     end
    51              1                          2                 count_i      <=0;
    52              1                          2                 count_j      <=0;
    53              1                          2                 wcount_j     <=0;
    54              1                          2                 wcount_i     <=0;
    55              1                          2                 QTxR_Dn_load <=0;
    56              1                          2                 Dn_out_Mul   <=0;
    57              1                          2                 finish_Mul   <=0;
    58              1                          2                 QTxRInv_Elem <=0;
    59                                               
    60                                                 end else if(write) begin
    61                                                 	    
    62              1                         10                 Q_matInternal    [wcount_i][wcount_j] <= Q_TElem;
    63              1                         10                 RInv_matInternal [wcount_i][wcount_j] <= R_invElem;
    64              1                         10                 QTxR_Dn_load                          <= 0;
    65              1                         10                  Dn_out_Mul                           <= 0;
    66                                               
    67                                                        if ( (wcount_i == 2'b10) && (wcount_j == 2'b10) ) 
    68                                               
    69              1                          1                         QTxR_Dn_load  <= 1;  
    70                                               
    71                                                        if (wcount_j == 2'b10) begin
    72                                               
    73              1                          3                   wcount_j <='b0;
    74              1                          3                   wcount_i <= wcount_i+1;
    75                                               
    76                                                     end else 
    77              1                          7                   wcount_j <= wcount_j+1;
    78                                                             
    79                                                           
    80                                                 end else if (start_Mul) begin
    81                                               
    82              1                          1       	    QTxRInv_Internal[0][0]  <= $signed(Q_matInternal[0][0]) * $signed(RInv_matInternal[0][0]) + $signed(Q_matInternal[1][0]) * $signed(RInv_matInternal[0][1]) +$signed(Q_matInternal[2][0]) * $signed(RInv_matInternal[0][2])  ;
    83                                               
    84              1                          1             QTxRInv_Internal[0][1]  <= $signed(Q_matInternal[0][1]) * $signed(RInv_matInternal[0][0]) + $signed(Q_matInternal[1][1]) * $signed(RInv_matInternal[0][1]) + $signed(Q_matInternal[2][1]) * $signed(RInv_matInternal[0][2]) ;
    85                                               
    86              1                          1             QTxRInv_Internal[0][2]  <= $signed(Q_matInternal[0][2]) * $signed(RInv_matInternal[0][0]) + $signed(Q_matInternal[1][2]) * $signed(RInv_matInternal[0][1]) + $signed(Q_matInternal[2][2]) * $signed(RInv_matInternal[0][2]);
    87                                               
    88                                               
    89              1                          1             QTxRInv_Internal[1][0]  <= $signed(Q_matInternal[1][0]) * $signed(RInv_matInternal[1][1]) +  $signed(Q_matInternal[2][0]) * $signed(RInv_matInternal[1][2]) ;
    90                                               
    91              1                          1             QTxRInv_Internal[1][1]  <= $signed(Q_matInternal[1][1]) * $signed(RInv_matInternal[1][1]) + $signed(Q_matInternal[2][1]) * $signed(RInv_matInternal[1][2]);
    92                                               
    93              1                          1             QTxRInv_Internal[1][2]  <= $signed(Q_matInternal[1][2]) * $signed(RInv_matInternal[1][1]) + $signed(Q_matInternal[2][2]) * $signed(RInv_matInternal[1][2]);
    94                                               
    95                                               
    96              1                          1             QTxRInv_Internal[2][0]  <= $signed(Q_matInternal[2][0]) * $signed(RInv_matInternal[2][2]);
    97                                               
    98              1                          1             QTxRInv_Internal[2][1]  <= $signed(Q_matInternal[2][1]) * $signed(RInv_matInternal[2][2]); 
    99                                               
    100             1                          1             QTxRInv_Internal[2][2]  <= $signed(Q_matInternal[2][2]) * $signed(RInv_matInternal[2][2]); 
    101                                              
    102             1                          1             Dn_out_Mul              <= 1; 
    103                                              
    104                                                 end else if (read_mul) begin
    105                                              
    106                                                   if(!finish_Mul) begin
    107                                              
    108             1                          9                     QTxRInv_Elem <= (QTxRInv_Internal[count_i][count_j]) >>> 12;
    109                                              
    110                                                 if ( (count_i == 2'b10 ) && (count_j == 2'b10) ) begin
    111                                              
    112             1                          1                     finish_Mul <= 1;
    113                                                              
    114                                              
    115                                                    end else if(count_j==2'b10) begin
    116                                              
    117             1                          2                         count_i <=count_i+1;
    118             1                          2                         count_j <='b0;
    119                                              
    120                                                    end else begin
    121                                              
    122             1                          6                         count_j <=count_j+1;    

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        256       120       136    46.87%

================================Toggle Details================================

Toggle Coverage for instance /matrix_inv_tb/DUT/mul1 --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                        Dn_out_Mul           0           1                               50.00 
                                           I[31-0]           0           0                                0.00 
                                           J[31-0]           0           0                                0.00 
                                QTxRInv_Elem[15-0]           1           1                              100.00 
                                      QTxR_Dn_load           1           1                              100.00 
                                     Q_TElem[0-15]           1           1                              100.00 
                                      R_invElem[0]           0           0                                0.00 
                                    R_invElem[1-6]           1           1                              100.00 
                                      R_invElem[7]           0           0                                0.00 
                                   R_invElem[8-15]           1           1                              100.00 
                                               clk           1           1                              100.00 
                                        count_i[1]           0           1                               50.00 
                                        count_i[0]           1           1                              100.00 
                                      count_j[1-0]           1           1                              100.00 
                                        finish_Mul           0           1                               50.00 
                                          read_mul           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                         start_Mul           1           1                              100.00 
                                       wcount_i[1]           0           1                               50.00 
                                       wcount_i[0]           1           1                              100.00 
                                     wcount_j[1-0]           1           1                              100.00 
                                             write           1           1                              100.00 

Total Node Count     =        128 
Toggled Node Count   =         58 
Untoggled Node Count =         70 

Toggle Coverage      =      46.87% (120 of 256 bins)

=================================================================================
=== Instance: /matrix_inv_tb/DUT
=== Design Unit: work.matrix_inv
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        44        37         7    84.09%

================================Branch Details================================

Branch Coverage for instance /matrix_inv_tb/DUT

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File matrix_inv.sv
------------------------------------IF Branch------------------------------------
    116                                      108     Count coming in to IF
    116             1                          2             if(!rst_n)begin
    160             1                        106             else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    162                                      106     Count coming in to CASE
    163             1                          4                     IDLE:begin
    171             1                          3                     LOAD:begin
    226             1                         42                     VECT:begin
    277             1                         42                     ROT:begin
    320             1                          1                     LOINV:begin
    332             1                          4                     INV:begin
    343             1                          4                     PREMUL:begin
    358             1                          2                     MULT:begin
    367             1                          4                     DN:begin
                                         ***0***     All False Count
Branch totals: 9 hits of 10 branches = 90.00%

------------------------------------IF Branch------------------------------------
    164                                        4     Count coming in to IF
    164             1                          1                         if(start) begin
    168             1                          3                         else 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    173                                        3     Count coming in to CASE
    174             1                          1                                 2'b00:begin
    190             1                          1                                 2'b01:begin
    206             1                          1                                 2'b10:begin
                                         ***0***     All False Count
Branch totals: 3 hits of 4 branches = 75.00%

------------------------------------IF Branch------------------------------------
    175                                        1     Count coming in to IF
    175             1                    ***0***                                     if(mat[1][0]==0)begin
    183             1                          1                                     else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    191                                        1     Count coming in to IF
    191             1                    ***0***                                     if(mat[2][0]==0)begin
    199             1                          1                                     else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    207                                        1     Count coming in to IF
    207             1                    ***0***                                     if(mat[2][1]==0)begin
    217             1                          1                                     else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    228                                       42     Count coming in to IF
    228             1                         39                         if(!done_o_vcord)
    230             1                          3                         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    231                                        3     Count coming in to CASE
    232             1                          1                                 2'b00:begin
    246             1                          1                                 2'b01:begin
    260             1                          1                                 2'b10:begin
                                         ***0***     All False Count
Branch totals: 3 hits of 4 branches = 75.00%

------------------------------------IF Branch------------------------------------
    279                                       42     Count coming in to IF
    279             1                         39                         if(!done_o_rcord)
    281             1                          3                         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    282                                        3     Count coming in to CASE
    283             1                          1                                 2'b00:begin
    295             1                          1                                 2'b01:begin
    307             1                          1                                 2'b10:begin
                                         ***0***     All False Count
Branch totals: 3 hits of 4 branches = 75.00%

------------------------------------IF Branch------------------------------------
    334                                        4     Count coming in to IF
    334             1                          3                         if(!(done_o_inv && done_o_q) )
    336             1                          1                         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    344                                        4     Count coming in to IF
    344             1                          3                         if(!(finish_o_inv && finish_o_q && loaded_o_mult))begin
    350             1                          1                         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    360                                        2     Count coming in to IF
    360             1                          1                         if(!done_o_mult)
    362             1                          1                         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    368                                        4     Count coming in to IF
    368             1                          2                         if(read && !(finish_o_mult))begin
    372             1                          2                         else begin
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      10         3         7    30.00%

================================Condition Details================================

Condition Coverage for instance /matrix_inv_tb/DUT --

  File matrix_inv.sv
----------------Focused Condition View-------------------
Line       175 Item    1  (mat[1][0] == 0)
Condition totals: 0 of 1 input term covered = 0.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  (mat[1][0] == 0)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (mat[1][0] == 0)_0    -                             
  Row   2:    ***0***  (mat[1][0] == 0)_1    -                             

----------------Focused Condition View-------------------
Line       191 Item    1  (mat[2][0] == 0)
Condition totals: 0 of 1 input term covered = 0.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  (mat[2][0] == 0)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (mat[2][0] == 0)_0    -                             
  Row   2:    ***0***  (mat[2][0] == 0)_1    -                             

----------------Focused Condition View-------------------
Line       207 Item    1  (mat[2][1] == 0)
Condition totals: 0 of 1 input term covered = 0.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  (mat[2][1] == 0)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (mat[2][1] == 0)_0    -                             
  Row   2:    ***0***  (mat[2][1] == 0)_1    -                             

----------------Focused Condition View-------------------
Line       334 Item    1  (done_o_inv ~& done_o_q)
Condition totals: 1 of 2 input terms covered = 50.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
  done_o_inv         Y
    done_o_q         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  done_o_inv_0          done_o_q                      
  Row   2:          1  done_o_inv_1          done_o_q                      
  Row   3:    ***0***  done_o_q_0            done_o_inv                    
  Row   4:          1  done_o_q_1            done_o_inv                    

----------------Focused Condition View-------------------
Line       344 Item    1  ((finish_o_inv && finish_o_q) ~& loaded_o_mult)
Condition totals: 1 of 3 input terms covered = 33.33%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
   finish_o_inv         N  '_0' not hit             Hit '_0'
     finish_o_q         N  '_0' not hit             Hit '_0'
  loaded_o_mult         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  finish_o_inv_0        loaded_o_mult                 
  Row   2:          1  finish_o_inv_1        (loaded_o_mult && finish_o_q) 
  Row   3:    ***0***  finish_o_q_0          (loaded_o_mult && finish_o_inv)
  Row   4:          1  finish_o_q_1          (loaded_o_mult && finish_o_inv)
  Row   5:          1  loaded_o_mult_0       (finish_o_inv && finish_o_q)  
  Row   6:          1  loaded_o_mult_1       (finish_o_inv && finish_o_q)  

----------------Focused Condition View-------------------
Line       368 Item    1  (read && ~finish_o_mult)
Condition totals: 1 of 2 input terms covered = 50.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
           read         N  '_0' not hit             Hit '_0'
  finish_o_mult         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  read_0                -                             
  Row   2:          1  read_1                ~finish_o_mult                
  Row   3:          1  finish_o_mult_0       read                          
  Row   4:          1  finish_o_mult_1       read                          


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                      3         0         3     0.00%

================================Expression Details================================

Expression Coverage for instance /matrix_inv_tb/DUT --

  File matrix_inv.sv
----------------Focused Expression View-----------------
Line       380 Item    1  ((done_o_rcord1 & done_o_rcord2) & done_o_rcord3)
Expression totals: 0 of 3 input terms covered = 0.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  done_o_rcord1         N  '_0' not hit             Hit '_0'
  done_o_rcord2         N  '_0' not hit             Hit '_0'
  done_o_rcord3         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  done_o_rcord1_0       (done_o_rcord3 && done_o_rcord2)
  Row   2:          1  done_o_rcord1_1       (done_o_rcord3 && done_o_rcord2)
  Row   3:    ***0***  done_o_rcord2_0       (done_o_rcord3 && done_o_rcord1)
  Row   4:          1  done_o_rcord2_1       (done_o_rcord3 && done_o_rcord1)
  Row   5:    ***0***  done_o_rcord3_0       (done_o_rcord1 & done_o_rcord2)
  Row   6:          1  done_o_rcord3_1       (done_o_rcord1 & done_o_rcord2)


FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                      12        12         0   100.00%
    FSM Transitions                 22        12        10    54.54%

================================FSM Details================================

FSM Coverage for instance /matrix_inv_tb/DUT --

FSM_ID: state
    Current State Object : state
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
 163                IDLE                   0
 171                LOAD                   1
 226                VECT                   2
 332                 INV                   5
 277                 ROT                   3
 320               LOINV                   4
 343              PREMUL                   6
 358                MULT                   7
 130                  DN                   8
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                    IDLE                   5          
                    LOAD                   3          
                    VECT                  42          
                     INV                   4          
                     ROT                  42          
                   LOINV                   1          
                  PREMUL                   4          
                    MULT                   2          
                      DN                   3          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
 165                   0                   1          IDLE -> LOAD                  
 221                   1                   3          LOAD -> VECT                  
 272                   4                   3          VECT -> ROT                   
 337                   6                   1          INV -> PREMUL                 
 313                   8                   1          ROT -> LOINV                  
 303                   9                   2          ROT -> LOAD                   
 330                  11                   1          LOINV -> INV                  
 352                  13                   1          PREMUL -> MULT                
 364                  15                   1          MULT -> DN                    
    Uncovered Transitions :
    -----------------------
Line            Trans_ID          Transition          
----            --------          ----------          
 215                   2          LOAD -> INV         
 130                   3          LOAD -> IDLE        
 130                   5          VECT -> IDLE        
 130                   7          INV -> IDLE         
 130                  10          ROT -> IDLE         
 130                  12          LOINV -> IDLE       
 130                  14          PREMUL -> IDLE      
 130                  16          MULT -> IDLE        
 130                  17          DN -> IDLE          


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   9         9         0   100.00%
        FSM Transitions             18         9         9    50.00%
FSM_ID: count
    Current State Object : count
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
 283                 st0                   0
 295                 st1                   1
 307                 st2                   2
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                     st0                   4          
                     st1                   1          
                     st2                   1          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
 293                   0                   1          st0 -> st1                    
 305                   1                   1          st1 -> st2                    
 315                   3                   1          st2 -> st0                    
    Uncovered Transitions :
    -----------------------
Line            Trans_ID          Transition          
----            --------          ----------          
 166                   2          st1 -> st0          


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   3         3         0   100.00%
        FSM Transitions              4         3         1    75.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                     182       162        20    89.01%

================================Statement Details================================

Statement Coverage for instance /matrix_inv_tb/DUT --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File matrix_inv.sv
    1                                                module matrix_inv #(parameter STG  = 12,parameter SIZE = 16,parameter INT  = 4,parameter FRAC = 12) 
    2                                                 (
    3                                                    input clk,rst_n,start, read,
    4                                                    output logic signed [SIZE -1 : 0] data_out,
    5                                                    output logic done , finish
    6                                                );
    7                                                    /*'
    8                                                    donot forget to connect rst_n and clk to all blocks
    9                                                    and angle_i_rcord is input to all rot cordic
    10                                                   */
    11                                                   ////////////////////////////////////////////////declerations//////////////////////
    12                                                   enum bit[3:0] {IDLE,LOAD,VECT,ROT,LOINV,INV,PREMUL,MULT,DN} state; //our states 
    13                                                   bit [SIZE - 1 : 0] mat [0:2][0:2];//intial matrix to calculate it's inverse
    14                                                   logic start_i_vcord , start_i_rcord , start_i_inv,start_i_q, start_i_mult;//wiring for all start signals for each module
    15                                                   logic done_o_vcord,done_o_rcord, done_o_rcord1, done_o_rcord2, done_o_rcord3, done_o_inv, done_o_q, done_o_mult;//wiring for all done signals from each module
    16                                                   logic write_i_mult;//signal to start to write inside internal registers in mult module
    17                                                   logic read_i_q, read_i_inv, read_i_mult;//read signals to read from r_inv and Q modules
    18                                                   logic load_i_q;//load signal to load(save) the sin and cos after each itr inside q_mat module to generate q mat later
    19                                                   logic finish_o_q, finish_o_inv, finish_o_mult;//finish signal dedicates that the module finished from sending data.
    20                                                   logic [SIZE - 1 : 0] X_i_rcord1 , Y_i_rcord1, X_i_rcord2 , Y_i_rcord2 ,X_i_rcord3 ,Y_i_rcord3;
    21                                                   logic [SIZE - 1 : 0] X_o_rcord1 , Y_o_rcord1, X_o_rcord2 , Y_o_rcord2;//output signals from rot cordic modules 1 & 2
    22                                                   logic [SIZE - 1 : 0] sin_o_rcord , cos_o_rcord, sin_i_q, cos_i_q;//sin and cos output from rcord3 and input to q_mat
    23                                                   logic [SIZE - 1 : 0] X_i_vcord, Y_i_vcord;//data input to vector cordic
    24                                                   logic [SIZE - 1 : 0] mag_o_vcord, angle_o_vcord , angle_i_rcord,angle_i_rcord_3;//magnitude and angle output from vcordic,this angle is input to rot cordic
    25                                                   //logic [SIZE - 1 : 0] data_o_q , data_o_inv;//data output serially from q_mat and r_inv and input to mult module
    26                                                   logic [SIZE - 1 : 0] s1,s2,s3,s4,s5,s6;//input signals to inv module
    27                                                   logic [1:0] addr_i_q;//input address to q mat
    28                                                   bit   [1:0] count ,i ,j;// internal counter
    29                                                   logic loaded_o_mult;
    30                                                   logic [SIZE - 1 : 0] Q , R ;////Q serial out from q mat and input for mult
    31                                                   ////////////////////////////////////////////INTSTANTATIONS//////////////////////
    32                                                   q_matrix q1 (
    33                                                   clk,rst_n,start_i_q,load_i_q,read_i_q,
    34                                                   addr_i_q,
    35                                                   sin_i_q,cos_i_q,
    36                                                   done_o_q,finish_o_q,
    37                                                   Q
    38                                               );
    39                                               rot_cordic r1(
    40                                                   clk,
    41                                                   rst_n,
    42                                                   start_i_rcord,  
    43                                                   X_i_rcord1, 
    44                                                   Y_i_rcord1,
    45                                                   angle_i_rcord,
    46                                                   X_o_rcord1,
    47                                                   Y_o_rcord1,
    48                                                   done_o_rcord1
    49                                               );
    50                                               rot_cordic r2(
    51                                                   clk,
    52                                                   rst_n,
    53                                                   start_i_rcord,  
    54                                                   X_i_rcord2, 
    55                                                   Y_i_rcord2,
    56                                                   angle_i_rcord,
    57                                                   X_o_rcord2,
    58                                                   Y_o_rcord2,
    59                                                   done_o_rcord2
    60                                               );
    61                                               rot_cordic r3(
    62                                                   clk,
    63                                                   rst_n,
    64                                                   start_i_rcord,  
    65                                                   X_i_rcord3, 
    66                                                   Y_i_rcord3,
    67                                                   angle_i_rcord_3,
    68                                                   cos_o_rcord,
    69                                                   sin_o_rcord,
    70                                                   done_o_rcord3
    71                                               );
    72                                               vect_cordic v1( 
    73                                                   clk,
    74                                                   rst_n,
    75                                                   start_i_vcord,  
    76                                                   X_i_vcord, 
    77                                                   Y_i_vcord,
    78                                                   mag_o_vcord,
    79                                                   angle_o_vcord,
    80                                                   done_o_vcord
    81                                               );
    82                                               RinvrMatrix i1(
    83                                                   clk,
    84                                                   rst_n, 
    85                                                   start_i_inv, 
    86                                                   read_i_inv, 
    87                                               //diagonal(input to cordic)
    88                                                   s1,
    89                                                   s4,
    90                                                   s6,
    91                                               //upper
    92                                                   s2,
    93                                                   s3,
    94                                                   s5,
    95                                               
    96                                                   finish_o_inv,
    97                                                   done_o_inv,
    98                                                   R           //output is one element each clk cylce
    99                                               );
    100                                              MulMatrix mul1(
    101                                                  clk,
    102                                                  rst_n, 
    103                                                  write_i_mult, 
    104                                                  R,
    105                                                  Q,
    106                                                  start_i_mult, 
    107                                                  read_i_mult, 
    108                                                  loaded_o_mult,
    109                                                  done_o_mult,
    110                                                  finish_o_mult,
    111                                                  data_out
    112                                              );
    113                                              
    114                                                  /////////////////////////////////////////////logic////////////////////////////////
    115             1                        108         always @(posedge clk , negedge rst_n) begin
    116                                                      if(!rst_n)begin
    117             1                          2                 mat[0][0]  <= 16'h2000;
    118             1                          2                 mat[0][1]  <= 16'h1000;
    119             1                          2                 mat[0][2]  <= 16'h0400;
    120             1                          2                 mat[1][0]  <= 16'h1000;
    121             1                          2                 mat[1][1]  <= 16'h2000;
    122             1                          2                 mat[1][2]  <= 16'h0800;
    123             1                          2                 mat[2][0]  <= 16'h2000;
    124             1                          2                 mat[2][1]  <= 16'h1000;        
    125             1                          2                 mat[2][2]  <= 16'h1000;
    126             1                          2                 done<=0;
    127             1                          2                 angle_i_rcord_3<=0;
    128             1                          2                 angle_i_rcord<=0;
    129             1                          2                 finish<=0;
    130             1                          2                 state<=IDLE;
    131             1                          2                 start_i_vcord<=0;
    132             1                          2                 start_i_rcord<=0;
    133             1                          2                 start_i_inv<=0;
    134             1                          2                 start_i_q<=0;
    135             1                          2                 start_i_mult<=0;
    136             1                          2                 read_i_q<=0;
    137             1                          2                 read_i_inv<=0;
    138             1                          2                 read_i_mult<=0;
    139             1                          2                 load_i_q<=0;
    140             1                          2                 sin_i_q<=0;
    141             1                          2                 cos_i_q<=0;
    142             1                          2                 write_i_mult<=0;
    143             1                          2                 count<=0;//itr count number
    144             1                          2                 s1<=0;
    145             1                          2                 s2<=0;
    146             1                          2                 s3<=0;
    147             1                          2                 s4<=0;
    148             1                          2                 s5<=0;
    149             1                          2                 s6<=0;
    150             1                          2                 addr_i_q<=0;
    151             1                          2                 X_i_rcord1<=0;
    152             1                          2                 X_i_rcord2<=0;
    153             1                          2                 X_i_rcord3<=0;
    154             1                          2                 Y_i_rcord1<=0;
    155             1                          2                 Y_i_rcord2<=0;
    156             1                          2                 Y_i_rcord3<=0;
    157             1                          2                 X_i_vcord<=0;
    158             1                          2                 Y_i_vcord<=0;
    159                                                      end
    160                                                      else begin
    161             1                        106                 load_i_q<=0;
    162                                                          case(state)
    163                                                              IDLE:begin
    164                                                                  if(start) begin
    165             1                          1                             state <= LOAD;
    166             1                          1                             count <= 0;
    167                                                                  end
    168                                                                  else 
    169             1                          3                             state <= IDLE;
    170                                                              end
    171                                                              LOAD:begin
    172             1                          3                         load_i_q<=0;
    173                                                                  case(count)
    174                                                                          2'b00:begin
    175                                                                              if(mat[1][0]==0)begin
    176             1                    ***0***                                         sin_i_q<=16'h0000;
    177             1                    ***0***                                         cos_i_q<=16'h1000;
    178             1                    ***0***                                         load_i_q<=1;
    179             1                    ***0***                                         addr_i_q<=count;
    180             1                    ***0***                                         count<=count+1;
    181             1                    ***0***                                         state<=LOAD;
    182                                                                              end
    183                                                                              else begin
    184             1                          1                                         start_i_vcord<=1;
    185             1                          1                                         X_i_vcord<=mat[0][0];
    186             1                          1                                         Y_i_vcord<=mat[1][0];
    187             1                          1                                         state<=VECT;
    188                                                                              end
    189                                                                          end
    190                                                                          2'b01:begin
    191                                                                              if(mat[2][0]==0)begin
    192             1                    ***0***                                         sin_i_q<=16'h0000;
    193             1                    ***0***                                         cos_i_q<=16'h1000;
    194             1                    ***0***                                         load_i_q<=1;
    195             1                    ***0***                                         addr_i_q<=count;
    196             1                    ***0***                                         count<=count+1;
    197             1                    ***0***                                         state<=LOAD;
    198                                                                              end
    199                                                                              else begin
    200             1                          1                                         start_i_vcord<=1;
    201             1                          1                                         X_i_vcord<=mat[0][0];
    202             1                          1                                         Y_i_vcord<=mat[2][0];
    203             1                          1                                         state<=VECT;
    204                                                                              end
    205                                                                          end
    206                                                                          2'b10:begin
    207                                                                              if(mat[2][1]==0)begin
    208             1                    ***0***                                         sin_i_q<=16'h0000;
    209             1                    ***0***                                         cos_i_q<=16'h1000;
    210             1                    ***0***                                         load_i_q<=1;
    211             1                    ***0***                                         addr_i_q<=count;
    212             1                    ***0***                                         count<=0;
    213             1                    ***0***                                         start_i_inv<=1;
    214             1                    ***0***                                         start_i_q<=1;
    215             1                    ***0***                                         state<=INV;
    216                                                                              end
    217                                                                              else begin
    218             1                          1                                         start_i_vcord<=1;
    219             1                          1                                         X_i_vcord<=mat[1][1];
    220             1                          1                                         Y_i_vcord<=mat[2][1];
    221             1                          1                                         state<=VECT;
    222                                                                              end
    223                                                                          end
    224                                                                      endcase
    225                                                              end
    226                                                              VECT:begin
    227             1                         42                         start_i_vcord<=0;
    228                                                                  if(!done_o_vcord)
    229             1                         39                             state<=VECT;
    230                                                                  else begin
    231                                                                      case(count)
    232                                                                          2'b00:begin
    233             1                          1                                     mat[0][0]<=mag_o_vcord;
    234             1                          1                                     mat[1][0]<=16'h0000;
    235             1                          1                                     angle_i_rcord<=-angle_o_vcord;
    236             1                          1                                     angle_i_rcord_3<=-angle_o_vcord;
    237             1                          1                                     X_i_rcord1<= mat[0][1];
    238             1                          1                                     Y_i_rcord1<= mat[1][1];
    239             1                          1                                     X_i_rcord2<= mat[0][2];
    240             1                          1                                     Y_i_rcord2<= mat[1][2];
    241             1                          1                                     X_i_rcord3<= 16'h1000;
    242             1                          1                                     Y_i_rcord3<= 16'h0000;
    243             1                          1                                     start_i_rcord<= 1;
    244             1                          1                                     state<= ROT;
    245                                                                          end
    246                                                                          2'b01:begin
    247             1                          1                                     mat[0][0]<=mag_o_vcord;
    248             1                          1                                     mat[2][0]<=16'h0000;
    249             1                          1                                     angle_i_rcord<=-angle_o_vcord;
    250             1                          1                                     angle_i_rcord_3<=-angle_o_vcord;
    251             1                          1                                     X_i_rcord1<= mat[0][1];
    252             1                          1                                     Y_i_rcord1<= mat[2][1];
    253             1                          1                                     X_i_rcord2<= mat[0][2];
    254             1                          1                                     Y_i_rcord2<= mat[2][2];
    255             1                          1                                     X_i_rcord3<= 16'h1000;
    256             1                          1                                     Y_i_rcord3<= 16'h0000;
    257             1                          1                                     start_i_rcord<= 1;
    258             1                          1                                     state<= ROT;
    259                                                                          end
    260                                                                          2'b10:begin
    261             1                          1                                     mat[1][1]<=mag_o_vcord;
    262             1                          1                                     mat[2][1]<=16'h0000;
    263             1                          1                                     angle_i_rcord<=-angle_o_vcord;
    264             1                          1                                     angle_i_rcord_3<=-angle_o_vcord;
    265             1                          1                                     X_i_rcord1<= mat[1][2];
    266             1                          1                                     Y_i_rcord1<= mat[2][2];
    267             1                          1                                     X_i_rcord2<= 16'h0000;
    268             1                          1                                     Y_i_rcord2<= 16'h0000;
    269             1                          1                                     X_i_rcord3<= 16'h1000;
    270             1                          1                                     Y_i_rcord3<= 16'h0000;
    271             1                          1                                     start_i_rcord<= 1;
    272             1                          1                                     state<= ROT;
    273                                                                          end
    274                                                                      endcase
    275                                                                  end
    276                                                              end
    277                                                              ROT:begin
    278             1                         42                         start_i_rcord<=0;
    279                                                                  if(!done_o_rcord)
    280             1                         39                             state<= ROT;
    281                                                                  else begin
    282                                                                      case(count)
    283                                                                          2'b00:begin
    284             1                          1                                     mat[0][1]<=X_o_rcord1;
    285             1                          1                                     mat[1][1]<=Y_o_rcord1;
    286             1                          1                                     mat[0][2]<=X_o_rcord2;
    287             1                          1                                     mat[1][2]<=Y_o_rcord2;
    288             1                          1                                     sin_i_q<= sin_o_rcord;
    289             1                          1                                     cos_i_q<= cos_o_rcord;
    290             1                          1                                     load_i_q<=1;
    291             1                          1                                     state<= LOAD;
    292             1                          1                                     addr_i_q <=count;
    293             1                          1                                     count<=count+1;
    294                                                                          end
    295                                                                          2'b01:begin
    296             1                          1                                     mat[0][1]<=X_o_rcord1;
    297             1                          1                                     mat[2][1]<=Y_o_rcord1;
    298             1                          1                                     mat[0][2]<=X_o_rcord2;
    299             1                          1                                     mat[2][2]<=Y_o_rcord2;
    300             1                          1                                     sin_i_q<= sin_o_rcord;
    301             1                          1                                     cos_i_q<= cos_o_rcord;
    302             1                          1                                     load_i_q<=1;
    303             1                          1                                     state<= LOAD;
    304             1                          1                                     addr_i_q<=count;
    305             1                          1                                     count<=count+1;
    306                                                                          end
    307                                                                          2'b10:begin
    308             1                          1                                     mat[1][2]<=X_o_rcord1;
    309             1                          1                                     mat[2][2]<=Y_o_rcord1;
    310             1                          1                                     sin_i_q<= sin_o_rcord;
    311             1                          1                                     cos_i_q<= cos_o_rcord;
    312             1                          1                                     load_i_q<=1;
    313             1                          1                                     state<= LOINV;
    314             1                          1                                     addr_i_q<=count;
    315             1                          1                                     count<=0;
    316                                                                          end
    317                                                                      endcase
    318                                                                  end
    319                                                              end
    320                                                              LOINV:begin
    321             1                          1                         load_i_q<=0;
    322             1                          1                         start_i_inv<=1;
    323             1                          1                         start_i_q<=1;
    324             1                          1                         s1<=mat[0][0];
    325             1                          1                         s2<=mat[0][1];
    326             1                          1                         s3<=mat[0][2];
    327             1                          1                         s4<=mat[1][1];
    328             1                          1                         s5<=mat[1][2];
    329             1                          1                         s6<=mat[2][2];
    330             1                          1                         state<= INV;
    331                                                              end
    332                                                              INV:begin
    333             1                          4                         start_i_inv<=0;
    334                                                                  if(!(done_o_inv && done_o_q) )
    335             1                          3                             state<=INV;
    336                                                                  else begin
    337             1                          1                             state<= PREMUL;
    338             1                          1                             read_i_inv<=1;
    339             1                          1                             read_i_q<=1;
    340             1                          1                             start_i_q<=0;
    341                                                                  end
    342                                                              end
    343                                                              PREMUL:begin
    344                                                                  if(!(finish_o_inv && finish_o_q && loaded_o_mult))begin
    345             1                          3                             write_i_mult <= 1;
    346             1                          3                             read_i_inv<=1;
    347             1                          3                             read_i_q<=1;
    348             1                          3                             state <= PREMUL;
    349                                                                  end
    350                                                                  else begin
    351             1                          1                             write_i_mult <= 0;
    352             1                          1                             state <= MULT;
    353             1                          1                             read_i_inv<=0;
    354             1                          1                             read_i_q<=0;
    355             1                          1                             start_i_mult<=1;
    356                                                                  end
    357                                                              end
    358                                                              MULT:begin
    359             1                          2                         start_i_mult<=0;
    360                                                                  if(!done_o_mult)
    361             1                          1                             state<= MULT;
    362                                                                  else begin
    363             1                          1                             done<=1;
    364             1                          1                             state<=DN;
    365                                                                  end
    366                                                              end
    367                                                              DN:begin
    368                                                                  if(read && !(finish_o_mult))begin
    369             1                          2                             read_i_mult<=1;
    370             1                          2                             state<=DN;
    371                                                                  end
    372                                                                  else begin
    373             1                          2                             finish<=1;
    374             1                          2                             read_i_mult<=0;
    375                                                                  end
    376                                                              end
    377                                                          endcase
    378                                                      end
    379                                                  end
    380             1                          8         assign done_o_rcord = done_o_rcord1 & done_o_rcord2 & done_o_rcord3;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                       1009       569       440    56.39%

================================Toggle Details================================

Toggle Coverage for instance /matrix_inv_tb/DUT --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                           Q[15-0]           1           1                              100.00 
                                           R[15-8]           1           1                              100.00 
                                              R[7]           0           0                                0.00 
                                            R[6-1]           1           1                              100.00 
                                              R[0]           0           0                                0.00 
                                 X_i_rcord1[15-13]           0           0                                0.00 
                                 X_i_rcord1[12-11]           1           1                              100.00 
                                    X_i_rcord1[10]           0           1                               50.00 
                                     X_i_rcord1[9]           0           0                                0.00 
                                     X_i_rcord1[8]           0           1                               50.00 
                                     X_i_rcord1[7]           1           1                              100.00 
                                     X_i_rcord1[6]           0           1                               50.00 
                                     X_i_rcord1[5]           0           0                                0.00 
                                   X_i_rcord1[4-1]           0           1                               50.00 
                                     X_i_rcord1[0]           1           1                              100.00 
                                 X_i_rcord2[15-11]           0           0                                0.00 
                                  X_i_rcord2[10-8]           1           1                              100.00 
                                   X_i_rcord2[7-6]           0           0                                0.00 
                                     X_i_rcord2[5]           1           1                              100.00 
                                     X_i_rcord2[4]           0           0                                0.00 
                                     X_i_rcord2[3]           1           1                              100.00 
                                   X_i_rcord2[2-0]           0           0                                0.00 
                                 X_i_rcord3[15-13]           0           0                                0.00 
                                    X_i_rcord3[12]           0           1                               50.00 
                                  X_i_rcord3[11-0]           0           0                                0.00 
                                  X_i_vcord[15-14]           0           0                                0.00 
                                     X_i_vcord[13]           1           1                              100.00 
                                     X_i_vcord[12]           0           1                               50.00 
                                     X_i_vcord[11]           0           0                                0.00 
                                     X_i_vcord[10]           0           1                               50.00 
                                      X_i_vcord[9]           1           1                              100.00 
                                      X_i_vcord[8]           0           1                               50.00 
                                      X_i_vcord[7]           1           1                              100.00 
                                    X_i_vcord[6-3]           0           1                               50.00 
                                      X_i_vcord[2]           0           0                                0.00 
                                    X_i_vcord[1-0]           0           1                               50.00 
                                  X_o_rcord1[15-0]           1           1                              100.00 
                                 X_o_rcord2[15-13]           0           0                                0.00 
                                  X_o_rcord2[12-0]           1           1                              100.00 
                                 Y_i_rcord1[15-14]           0           0                                0.00 
                                 Y_i_rcord1[13-12]           1           1                              100.00 
                                    Y_i_rcord1[11]           0           0                                0.00 
                                  Y_i_rcord1[10-8]           0           1                               50.00 
                                   Y_i_rcord1[7-6]           0           0                                0.00 
                                     Y_i_rcord1[5]           0           1                               50.00 
                                     Y_i_rcord1[4]           0           0                                0.00 
                                     Y_i_rcord1[3]           0           1                               50.00 
                                   Y_i_rcord1[2-1]           0           0                                0.00 
                                     Y_i_rcord1[0]           0           1                               50.00 
                                 Y_i_rcord2[15-13]           0           0                                0.00 
                                 Y_i_rcord2[12-11]           1           1                              100.00 
                                  Y_i_rcord2[10-0]           0           0                                0.00 
                                  Y_i_rcord3[15-0]           0           0                                0.00 
                                  Y_i_vcord[15-13]           0           1                               50.00 
                                     Y_i_vcord[12]           1           1                              100.00 
                                     Y_i_vcord[11]           0           1                               50.00 
                                   Y_i_vcord[10-8]           0           0                                0.00 
                                    Y_i_vcord[7-6]           0           1                               50.00 
                                      Y_i_vcord[5]           0           0                                0.00 
                                    Y_i_vcord[4-3]           0           1                               50.00 
                                    Y_i_vcord[2-1]           0           0                                0.00 
                                      Y_i_vcord[0]           0           1                               50.00 
                                  Y_o_rcord1[15-0]           1           1                              100.00 
                                 Y_o_rcord2[15-12]           0           0                                0.00 
                                  Y_o_rcord2[11-0]           1           1                              100.00 
                                       addr_i_q[1]           0           1                               50.00 
                                       addr_i_q[0]           1           1                              100.00 
                              angle_i_rcord[15-11]           1           1                              100.00 
                                 angle_i_rcord[10]           0           1                               50.00 
                                  angle_i_rcord[9]           0           0                                0.00 
                                  angle_i_rcord[8]           0           1                               50.00 
                                angle_i_rcord[7-6]           1           1                              100.00 
                                  angle_i_rcord[5]           0           0                                0.00 
                                angle_i_rcord[4-0]           0           1                               50.00 
                            angle_i_rcord_3[15-11]           1           1                              100.00 
                               angle_i_rcord_3[10]           0           1                               50.00 
                                angle_i_rcord_3[9]           0           0                                0.00 
                                angle_i_rcord_3[8]           0           1                               50.00 
                              angle_i_rcord_3[7-6]           1           1                              100.00 
                                angle_i_rcord_3[5]           0           0                                0.00 
                              angle_i_rcord_3[4-0]           0           1                               50.00 
                              angle_o_vcord[15-12]           0           1                               50.00 
                               angle_o_vcord[11-0]           1           1                              100.00 
                                               clk           1           1                              100.00 
                                    cos_i_q[15-12]           0           0                                0.00 
                                       cos_i_q[11]           0           1                               50.00 
                                       cos_i_q[10]           1           1                              100.00 
                                      cos_i_q[9-8]           0           1                               50.00 
                                      cos_i_q[7-6]           1           1                              100.00 
                                        cos_i_q[5]           0           1                               50.00 
                                      cos_i_q[4-0]           1           1                              100.00 
                                cos_o_rcord[15-12]           0           0                                0.00 
                                   cos_o_rcord[11]           0           1                               50.00 
                                 cos_o_rcord[10-0]           1           1                              100.00 
                                        count[1-0]           1           1                              100.00 
                                    data_out[15-0]           1           1                              100.00 
                                              done           0           1                               50.00 
                                        done_o_inv           0           1                               50.00 
                                       done_o_mult           0           1                               50.00 
                                          done_o_q           0           1                               50.00 
                                      done_o_rcord           1           1                              100.00 
                                     done_o_rcord1           1           1                              100.00 
                                     done_o_rcord2           1           1                              100.00 
                                     done_o_rcord3           1           1                              100.00 
                                      done_o_vcord           1           1                              100.00 
                                            finish           0           1                               50.00 
                                      finish_o_inv           0           1                               50.00 
                                     finish_o_mult           0           1                               50.00 
                                        finish_o_q           0           1                               50.00 
                                            i[1-0]           0           0                                0.00 
                                            j[1-0]           0           0                                0.00 
                                          load_i_q           1           1                              100.00 
                                     loaded_o_mult           1           1                              100.00 
                                mag_o_vcord[15-14]           0           0                                0.00 
                                 mag_o_vcord[13-0]           1           1                              100.00 
                                              read           0           1                               50.00 
                                        read_i_inv           1           1                              100.00 
                                       read_i_mult           1           1                              100.00 
                                          read_i_q           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                         s1[15-14]           0           0                                0.00 
                                         s1[13-12]           0           1                               50.00 
                                          s1[11-3]           0           0                                0.00 
                                           s1[2-1]           0           1                               50.00 
                                             s1[0]           0           0                                0.00 
                                         s2[15-14]           0           0                                0.00 
                                            s2[13]           0           1                               50.00 
                                          s2[12-2]           0           0                                0.00 
                                             s2[1]           0           1                               50.00 
                                             s2[0]           0           0                                0.00 
                                         s3[15-12]           0           0                                0.00 
                                          s3[11-0]           0           1                               50.00 
                                         s4[15-13]           0           0                                0.00 
                                            s4[12]           0           1                               50.00 
                                            s4[11]           0           0                                0.00 
                                          s4[10-9]           0           1                               50.00 
                                             s4[8]           0           0                                0.00 
                                             s4[7]           0           1                               50.00 
                                             s4[6]           0           0                                0.00 
                                             s4[5]           0           1                               50.00 
                                           s4[4-3]           0           0                                0.00 
                                           s4[2-0]           0           1                               50.00 
                                         s5[15-10]           0           0                                0.00 
                                             s5[9]           0           1                               50.00 
                                             s5[8]           0           0                                0.00 
                                           s5[7-6]           0           1                               50.00 
                                             s5[5]           0           0                                0.00 
                                             s5[4]           0           1                               50.00 
                                             s5[3]           0           0                                0.00 
                                           s5[2-1]           0           1                               50.00 
                                             s5[0]           0           0                                0.00 
                                         s6[15-12]           0           0                                0.00 
                                            s6[11]           0           1                               50.00 
                                          s6[10-7]           0           0                                0.00 
                                           s6[6-2]           0           1                               50.00 
                                           s6[1-0]           0           0                                0.00 
                                    sin_i_q[15-11]           1           1                              100.00 
                                       sin_i_q[10]           0           1                               50.00 
                                        sin_i_q[9]           0           0                                0.00 
                                        sin_i_q[8]           0           1                               50.00 
                                      sin_i_q[7-6]           1           1                              100.00 
                                        sin_i_q[5]           0           0                                0.00 
                                      sin_i_q[4-3]           1           1                              100.00 
                                      sin_i_q[2-1]           0           1                               50.00 
                                        sin_i_q[0]           1           1                              100.00 
                                 sin_o_rcord[15-0]           1           1                              100.00 
                                             start           1           1                              100.00 
                                       start_i_inv           1           1                              100.00 
                                      start_i_mult           1           1                              100.00 
                                         start_i_q           1           1                              100.00 
                                     start_i_rcord           1           1                              100.00 
                                     start_i_vcord           1           1                              100.00 
                                             state               ENUM type       Value       Count 
                                                                      IDLE           0        0.00 
                                                                      LOAD           3      100.00 
                                                                      VECT           3      100.00 
                                                                       ROT           3      100.00 
                                                                     LOINV           1      100.00 
                                                                       INV           1      100.00 
                                                                    PREMUL           1      100.00 
                                                                      MULT           1      100.00 
                                                                        DN           1      100.00 
                                      write_i_mult           1           1                              100.00 

Total Node Count     =        509 
Toggled Node Count   =        235 
Untoggled Node Count =        274 

Toggle Coverage      =      56.39% (569 of 1009 bins)

=================================================================================
=== Instance: /matrix_inv_tb
=== Design Unit: work.matrix_inv_tb
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      29        29         0   100.00%

================================Statement Details================================

Statement Coverage for instance /matrix_inv_tb --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File top_tb.sv
    2                                                module matrix_inv_tb #(parameter STG  = 12,parameter SIZE = 16,parameter INT  = 4,parameter FRAC = 12);
    3                                                
    4                                                    // Input
    5                                                    bit                        clk_tb;
    6                                                    logic                      rst_n_tb;
    7                                                    logic                      start_tb;
    8                                                    logic                      read_tb;
    9                                                
    10                                                   // Output
    11                                                   logic signed [SIZE -1 : 0] data_out_tb;
    12                                                   logic                      done_tb;
    13                                                   logic                      finish_tb;
    14                                               
    15                                                   always begin
    16              1                        465             #5
    17              1                        464             clk_tb = !clk_tb;
    18                                                   end
    19                                               
    20                                                   initial begin
    21                                               
    22              1                          1             initialize () ;
    23                                               
    24              1                          1             reset      () ;
    25                                               
    26              1                          1             start      () ;
    27                                               
    28              1                        121     while(!done_tb)
    29              1                        120     @(negedge clk_tb);
    30              1                          1     read_tb = 1'b1;
    31                                               
    32              1                          1             display    () ;
    33                                               
    34              1                        100             repeat (100) @(negedge clk_tb);
    34              2                        100     
    35              1                          1             $stop;
    36                                                   end
    37                                               
    38                                                   task reset();
    39                                                       begin
    40              1                          1                 rst_n_tb = 1'b1 ;            // rst is deactivated
    41              1                          5                 repeat(5)@(negedge clk_tb);
    41              2                          5     
    42              1                          1                 rst_n_tb = 1'b0 ;            // rst is activated
    43              1                          5                 repeat(5)@(negedge clk_tb);
    43              2                          5     
    44              1                          1                 rst_n_tb = 1'b1 ; 
    45                                                       end
    46                                                   endtask
    47                                               
    48                                                   task initialize ;
    49                                                       begin
    50              1                          1                 clk_tb   = 1'b0 ;
    51              1                          1                 start_tb = 1'b0 ;
    52              1                          1                 read_tb  = 1'b0 ;   
    53                                                       end
    54                                                   endtask
    55                                               
    56                                                   task start() ;
    57                                                       begin
    58              1                          1                 @(negedge clk_tb);
    59              1                          1                 start_tb = 1'b1 ;
    60                                               
    61              1                          1                 @(negedge clk_tb);
    62              1                          1                 start_tb = 1'b0 ; 
    63                                                       end
    64                                                   endtask
    65                                               
    66                                                   task display();
    67                                                       begin
    68              1                          1                 $monitor("data_out = %0h",data_out_tb);  
    69              1                          1                 $monitor("done     = %0h",done_tb);  
    70              1                          1                $monitor("finish   = %0h @time %0t ",finish_tb,$time);   

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         44        41         3    93.18%

================================Toggle Details================================

Toggle Coverage for instance /matrix_inv_tb --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                            clk_tb           1           1                              100.00 
                                 data_out_tb[0-15]           1           1                              100.00 
                                           done_tb           0           1                               50.00 
                                         finish_tb           0           1                               50.00 
                                           read_tb           0           1                               50.00 
                                          rst_n_tb           1           1                              100.00 
                                          start_tb           1           1                              100.00 

Total Node Count     =         22 
Toggled Node Count   =         19 
Untoggled Node Count =          3 

Toggle Coverage      =      93.18% (41 of 44 bins)


Total Coverage By Instance (filtered view): 70.12%

End time: 14:41:45 on Sep 16,2023, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
